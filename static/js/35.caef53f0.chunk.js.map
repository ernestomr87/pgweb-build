{"version":3,"sources":["styles/animation.js","components/Process/index.js","components/FreeUser/index.js","containers/Process/index.js"],"names":["fadeInKeyframes","keyframes","_templateObject","countries","require","default","Dragger","Upload","FormItem","Form","Item","Option","Select","FormItemWrapper","styled","Process_templateObject","Div","div","Process_templateObject2","props","error","Loading","_templateObject3","DivButtons","_templateObject4","IL","ImageLoader","_templateObject5","_ref","arguments","length","undefined","_ref$time","time","_ref$type","type","css","_templateObject2","fadeIn","jsUcfirst","string","charAt","toUpperCase","slice","Process","state","allowedFiles","showBilling","secret","process","fileList","uploading","visible","payVisible","processEnd","showError","source","target","viewNoty","loading","engines","defaultValue","defaultSourceValue","defaultTargetValue","selected","formValues","name","address","country","vattax","current","processSelected","loadingPay","applyTax","componentDidMount","_this","getEngines","regenerator_default","a","async","_context","prev","next","setState","awrap","getApiEngines","sent","data","value","initSelected","t0","stop","getProcess","self","_this$props","history","setProcessSelected","result","_context3","Object","assertThisInitialized","processAct","setInterval","aux","count","_context2","getProcessByListId","status","push","clearInterval","handleSubmit","e","preventDefault","messages","intl","_this$state","nameEng","getTargets","filter","item","key","form","validateFields","err","values","promises","map","functions","getBase64","originFileObj","Math","random","toString","Promise","all","then","files","split","id","engine","email","sendFile","message","success","catch","handleChange","array","forEach","element","toLowerCase","flag","i","languages","concat","sources","text","changeSource","changeTarget","getSources","_source","_this$state2","domain","renderForms","_this$state3","_this$props$form","getFieldDecorator","getFieldsError","dprops","beforeUpload","file","isLt2M","size","checkFile","uploadTwo","uploadOne","replace","onChange","info","multiple","showUploadList","options","d","react_default","createElement","c","Fragment","es_form","assign","labelCol","xs","span","sm","wrapperCol","onSubmit","row","justify","align","col","offset","badge","style","cursor","className","icon","drag","alert","validateStatus","label","hasFeedback","initialValue","disabled","rules","required","es_select","autofocus","notification","help","notificationHelp","input","display","justifyContent","marginBottom","es_button","marginTop","htmlType","getFieldValue","hasErrors","uploadingLoad","showListFile","hideListFile","setViewNoty","view","onRemove","_this$state4","uid","onRadioChange","pay","_context4","document","getElementById","submit","calculatePrice","price","toFixed","tax","parseFloat","_this2","this","continent","sum","rest","_this3","src","errorProcess","errorProcessSub","divider","onClick","tryAgain","spin","processing","React","Component","connect","rootReducer","dispatch","bindActionCreators","processActions","create","injectIntl","withRouter","FreeUser","selectProcess","changeFileID","src_components_Process","es","processAFile","subProcessAFile","components_FreeUser"],"mappings":"suBAEA,IAAMA,EAAkBC,YAAHC,6qBC2BrB,IAAMC,EAAYC,EAAQ,KAA2BC,QAC/CC,EAAUC,IAAOD,QACjBE,EAAWC,IAAKC,KAChBC,EAASC,IAAOD,OAEhBE,EAAkBC,YAAON,EAAPM,CAAHC,KAYfC,EAAMF,IAAOG,IAAVC,IAEL,SAAAC,GAAK,OAAKA,EAAMC,MAAN,+BAA+C,OAEvDC,EAAUP,IAAOG,IAAVK,KAKPC,EAAaT,IAAOG,IAAVO,KAKVC,EAAKX,YAAOY,IAAPZ,CAAHa,ID9Cc,eAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoC,GAApCG,EAAAJ,EAAGK,YAAH,IAAAD,EAAU,OAAVA,EAAAE,EAAAN,EAAkBO,YAAlB,IAAAD,EAAyB,OAAzBA,EAAA,OACpBE,YADoBC,IAELJ,EAAQjC,EAAmBmC,GC6CxCG,IAKEC,GAAY,SAAAC,GAChB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,IAGjDC,8MACJC,MAAQ,CACNC,aAAc,GACdC,YAAa,IACbC,OAAQ,KACRC,QAAS,GACTC,SAAU,GACVC,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXC,OAAQ,KACRC,OAAQ,KACRC,SAAU,UACVC,SAAS,EACTC,QAAS,GACTC,aAAc,GACdC,mBAAoB,KACpBC,mBAAoB,KACpBC,SAAU,CACRJ,QAAS,IAEXK,WAAY,CACVC,KAAM,GACNC,QAAS,GACTC,QAAS,KACTC,OAAQ,IAEVC,QAAS,EACTC,gBAAiB,KACjBC,YAAY,EACZC,UAAU,KAGZC,kBAAoB,WAClBC,EAAKC,gBAGPA,WAAa,eAAAhB,EAAA,OAAAiB,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXP,EAAKQ,SAAS,CACZxB,SAAS,IAFAqB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAL,EAAAC,EAAAM,MAKaC,eALb,QAKHzB,EALGoB,EAAAM,MAMGC,KAAKtC,SAAWW,EAAQ2B,KAAKtC,QAAQnB,SAC/C6C,EAAKQ,SAAS,CACZvB,QAASA,EAAQ2B,KAAKtC,QACtBH,aAAcc,EAAQ2B,KAAKzC,aAC3Be,aAActB,GAAUqB,EAAQ2B,KAAKC,SAEvCb,EAAKc,aAAa7B,EAAQ2B,KAAKC,MAAO5B,EAAQ2B,KAAKtC,UAGrD0B,EAAKQ,SAAS,CACZxB,SAAS,IAhBFqB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAmBTL,EAAKQ,SAAS,CACZxB,SAAS,IApBF,yBAAAqB,EAAAW,SAAA,sBAyBbC,WAAa,eAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApB,EAAAC,EAAAC,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACLW,EADKM,OAAAC,EAAA,EAAAD,CAAAxB,GAAAmB,EAKPnB,EAAKxD,MAFP4E,EAHSD,EAGTC,QACcC,EAJLF,EAITO,WAAcL,mBAEVC,EAASK,YAAY,eAAAC,EAAAC,EAAA,OAAA3B,EAAAC,EAAAC,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAAAL,EAAAC,EAAAM,MACPsB,aAAmB,CACnC1D,OAAQ6C,EAAKhD,MAAMG,UAFI,OACnBuD,EADmBE,EAAAnB,KAIrBkB,EAAQ,EACRD,EAAIhB,KAAKzD,QAAiC,gBAAvByE,EAAIhB,KAAK,GAAGoB,SACjCX,EAAmBO,EAAIhB,KAAK,IAC5BM,EAAKV,SAAS,CACZlC,QAASsD,EAAIhB,KACblC,YAAY,IAEd0C,EAAQa,KAAK,qBACbC,cAAcZ,IAEZO,EAAQ,KACVT,EAAQa,KAAK,SACbC,cAAcZ,IAEhBO,IAlByB,wBAAAC,EAAAd,WAmBxB,KAzBQ,wBAAAO,EAAAP,aA4BbmB,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAGRC,EACNtC,EAAKxD,MADP+F,KAAQD,SAHQE,EAKqBxC,EAAK9B,MAApCY,EALU0D,EAKV1D,OAAQP,EALEiE,EAKFjE,SAAUc,EALRmD,EAKQnD,SAIpBoD,EAHUzC,EAAK0C,aAGGC,OAAO,SAAAC,GAC7B,GAAIA,GAAQA,EAAKC,MAAQ/D,EACvB,OAAO8D,IAER,GAECH,GACFzC,EAAKQ,SAAS,CACZ1B,SACAF,WAAW,EACXG,SAAU,UACVY,QAAS,EACTL,WAAY,CACVC,KAAM,GACNC,QAAS,GACTC,QAAS,KACTC,OAAQ,IAEVI,UAAU,IAIdE,EAAKxD,MAAMsG,KAAKC,eAAe,SAACC,EAAKC,GACnC,IAAKD,EACH,GAAIzE,EAASpB,OAAQ,CACnB,IAAM+F,EAAW3E,EAAS4E,IAAI,SAAAP,GAC5B,OAAOQ,IAAUC,UAAUT,EAAKU,iBAG5BjF,EAASkF,KAAKC,SACjBC,SAAS,IACTzF,OAAO,GACVgC,EAAKQ,SAAS,CAAEnC,WAEhBqF,QAAQC,IAAIT,GACTU,KAAK,SAAAC,GACJ,IAAIjC,EAAMqB,EAAOnE,OAAOgF,MAAM,KAC1BhB,EAAO,CACTzE,OAAQA,EACRC,QAAS,CACPyF,GAAInC,EAAI,GACRrC,KAAMF,EAASE,MAEjByE,OAAQvB,EACR5D,OAAQ,CACNkF,GAAInC,EAAI,GACRrC,KAAMF,EAASE,MAEjBsE,MAAOA,EACPI,MAAOhB,EAAOgB,OAEhBjE,EAAKQ,SAAS,CACZhC,WAAW,IAEb0F,aAASpB,GACNc,KAAK,WACJO,IAAQC,QAAQ9B,EAAS5G,QAAQ0I,SACjCpE,EAAKQ,SAAS,CACZhC,WAAW,EACXO,SAAU,UACVR,SAAU,KAEZyB,EAAKiB,eAENoD,MAAM,SAAA5H,GACL0H,IAAQ1H,MAAMA,EAAM0H,SACpBnE,EAAKQ,SAAS,CACZhC,WAAW,EACXO,SAAU,cAIjBsF,MAAM,SAAArB,GACLmB,IAAQ1H,MAAMuG,EAAImB,gBAGtBnE,EAAKQ,SAAS,CACZ5B,WAAW,SAOrB0F,aAAe,SAAAzD,GACb,IAAIxB,EAAW,KACXkF,EAAQ,GAEZvE,EAAK9B,MAAMe,QAAQuF,QAAQ,SAAAC,GACrBA,EAAQlF,OAASsB,EAAM6D,gBACzB1E,EAAKQ,SAAS,CACZnB,SAAUoF,IAEZpF,EAAWoF,KAIXpF,GACEA,EAASJ,SAAWI,EAASJ,QAAQ9B,SACvCkC,EAASJ,QAAQuF,QAAQ,SAAAC,GAEvB,IADA,IAAIE,GAAO,EACFC,EAAI,EAAGA,EAAIL,EAAMpH,OAAQyH,IAChC,GAAIL,EAAMK,GAAG/B,MAAQ4B,EAAQ5F,OAAQ,CACnC8F,GAAO,EACP,MAGJ,IAAKA,EAAM,CACT,IAAI9B,EAAM4B,EAAQ5F,OAClB0F,EAAMtC,KAAK,CACTY,MACAkB,GAAIU,EAAQV,GACZxE,KAAM6D,IAAUyB,UAAUhC,GAC1B/D,OAAQ2F,EAAQ3F,OAChBD,OAAQ4F,EAAQ5F,YAIlB0F,EAAMpH,QACR6C,EAAKQ,SAAS,CACZrB,mBAAoBoF,EAAM,GAAGhF,KAC7BV,OAAQ0F,EAAM,GAAG1F,OACjBC,OAAM,GAAAgG,OAAKP,EAAM,GAAGR,GAAd,KAAAe,OAAoBP,EAAM,GAAGzF,QACnCM,mBAAoBY,EAAK0C,WAAWrD,EAASJ,QAASsF,EAAM,GAAG1F,QAAQ,GAAGU,WAOpFuB,aAAe,SAACD,EAAOkE,GAIrB,IAHA,IAAI1F,EAAW,KACXkF,EAAQ,GACNrD,EAAIM,OAAAC,EAAA,EAAAD,CAAAxB,GACD4E,EAAI,EAAGA,EAAIG,EAAQ5H,OAAQyH,IAClC,GAAIG,EAAQH,GAAGrF,OAASsB,EAAO,CAC7BK,EAAKV,SAAS,CACZnB,SAAU0F,EAAQH,KAEpBvF,EAAW0F,EAAQH,GACnB,MAIAvF,GACEA,EAASJ,SAAWI,EAASJ,QAAQ9B,SACvCkC,EAASJ,QAAQuF,QAAQ,SAAAC,GAEvB,IADA,IAAIE,GAAO,EACFC,EAAI,EAAGA,EAAIL,EAAMpH,OAAQyH,IAChC,GAAIL,EAAMK,GAAG/B,MAAQ4B,EAAQ5F,OAAQ,CACnC8F,GAAO,EACP,MAGJ,IAAKA,EAAM,CACT,IAAI9B,EAAM4B,EAAQ5F,OAClB0F,EAAMtC,KAAK,CACTY,MACAkB,GAAIU,EAAQV,GACZxE,KAAM6D,IAAUyB,UAAUhC,GAC1B/D,OAAQ2F,EAAQ3F,OAChBD,OAAQ4F,EAAQ5F,YAIlB0F,EAAMpH,QACR6C,EAAKQ,SAAS,CACZrB,mBAAoBoF,EAAM,GAAGhF,KAC7BV,OAAQ0F,EAAM,GAAG1F,OACjBC,OAAM,GAAAgG,OAAKP,EAAM,GAAGR,GAAd,KAAAe,OAAoBP,EAAM,GAAGzF,QACnCM,mBAAoBY,EAAK0C,WAAWrD,EAASJ,QAASsF,EAAM,GAAG1F,QAAQ,GAAGmG,WAOpFC,aAAe,SAAApG,GACbmB,EAAKQ,SAAS,CACZ3B,cAIJqG,aAAe,SAAApG,GACbkB,EAAKQ,SAAS,CACZ1B,cAIJqG,WAAa,WAAM,IACT9F,EAAaW,EAAK9B,MAAlBmB,SACJkF,EAAQ,GAiBZ,OAhBIlF,EAASJ,SAAWI,EAASJ,QAAQ9B,QACvCkC,EAASJ,QAAQuF,QAAQ,SAAAC,GAEvB,IADA,IAAIE,GAAO,EACFC,EAAI,EAAGA,EAAIL,EAAMpH,OAAQyH,IAChC,GAAIL,EAAMK,GAAG/B,MAAQ4B,EAAQ5F,OAAQ,CACnC8F,GAAO,EACP,MAGJ,IAAKA,EAAM,CACT,IAAI9B,EAAM4B,EAAQ5F,OAClB0F,EAAMtC,KAAK,CAAEY,MAAKtD,KAAM6D,IAAUyB,UAAUhC,QAK3C0B,KAGT7B,WAAa,WAAoC,IAAnCzD,EAAmC/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,KAAMkI,EAAmBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAASmI,EAClBrF,EAAK9B,MAA1BmB,EADuCgG,EACvChG,SAAUR,EAD6BwG,EAC7BxG,OACbI,IACHA,EAAUI,EAASJ,SAEhBmG,IACHA,EAAUvG,GAGZ,IAAI0F,EAAQ,GAyBZ,OAxBAtF,EAAQuF,QAAQ,SAAAC,GAEd,IADA,IAAIE,GAAO,EACFC,EAAI,EAAGA,EAAIL,EAAMpH,OAAQyH,IAChC,GAAIL,EAAMK,GAAG/B,MAAQ4B,EAAQ3F,OAAQ,CACnC6F,GAAO,EACP,MAIAS,IACGT,GAAQF,EAAQ5F,SAAWuG,IAC1BX,EAAQa,QACVb,EAAO,IAAP,GAAAK,OAAoBL,EAAQV,GAA5B,KAAAe,OAAkCL,EAAQ3F,QAC1C2F,EAAO,KAAP,GAAAK,OAAqB1B,IAAUyB,UAAUJ,EAAQ3F,QAAjD,OAAAgG,OAA8DL,EAAQlF,KAAtE,OAAAuF,OACEL,EAAQa,UAGVb,EAAO,IAAP,GAAAK,OAAoBL,EAAQV,GAA5B,KAAAe,OAAkCL,EAAQ3F,QAC1C2F,EAAO,KAAP,GAAAK,OAAqB1B,IAAUyB,UAAUJ,EAAQ3F,QAAjD,OAAAgG,OAA8DL,EAAQlF,OAExEgF,EAAMtC,KAAKwC,OAIVF,KAGTgB,YAAc,WAAM,IAERjD,EACNtC,EAAKxD,MADP+F,KAAQD,SAFQkD,EAkBdxF,EAAK9B,MAbPC,EALgBqH,EAKhBrH,aACAc,EANgBuG,EAMhBvG,QACAD,EAPgBwG,EAOhBxG,QACAT,EARgBiH,EAQhBjH,SACAK,EATgB4G,EAShB5G,UACAM,EAVgBsG,EAUhBtG,aACAL,EAXgB2G,EAWhB3G,OACAF,EAZgB6G,EAYhB7G,WACAQ,EAbgBqG,EAahBrG,mBACAC,EAdgBoG,EAchBpG,mBACAC,EAfgBmG,EAehBnG,SACAb,EAhBgBgH,EAgBhBhH,UACAM,EAjBgB0G,EAiBhB1G,OAjBgB2G,EAsBdzF,EAAKxD,MADPsG,KAAQ4C,EArBQD,EAqBRC,kBAAmBC,EArBXF,EAqBWE,eA0BvBC,EAAS,CACbC,aAAc,SAAAC,GACZ,IAAMC,EAASD,EAAKE,KAAO,KAAO,KAAO,IAMzC,OALK5C,IAAU6C,UAAUH,EAAM3H,GAEnB4H,GACV5B,IAAQ1H,MAAM6F,EAAShE,QAAQ7B,MAAMyJ,WAFrC/B,IAAQ1H,MAAM6F,EAAShE,QAAQ7B,MAAM0J,UAAUC,QAAQ,eAAgBjI,KAIlE,GAETkI,SAAU,SAAAC,GACR,IAAI1E,EAAM,GACV0E,EAAK/H,SAAS4E,IAAI,SAAAP,GAIhB,OAHIQ,IAAU6C,UAAUrD,EAAMzE,IAC5ByD,EAAIK,KAAKW,GAEJhB,IAET5B,EAAKQ,SAAS,CACZjC,SAAUqD,KAGd2E,UAAU,EACVhI,WACAiI,gBAAgB,GAEdC,EAAU,GASd,OARIxH,EAAQ9B,SACVsJ,EAAUxH,EAAQkE,IAAI,SAAAuD,GAAC,OACrBC,EAAAxG,EAAAyG,cAAC5K,EAAD,CAAQ6G,IAAK6D,EAAE3C,GAAIlD,MAAO6F,EAAEnH,KAAK6G,QAAQ,MAAO,SAAAS,GAAC,OAAIA,EAAE9I,iBACpD2I,EAAEnH,KAAK6G,QAAQ,MAAO,SAAAS,GAAC,OAAIA,EAAE9I,oBAMlC4I,EAAAxG,EAAAyG,cAACD,EAAAxG,EAAM2G,SAAP,KACEH,EAAAxG,EAAAyG,cAACG,EAAA,EAADvF,OAAAwF,OAAA,GA5DmB,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAqDZ,CAA0BG,SAAUtH,EAAKmC,eACvCwE,EAAAxG,EAAAyG,cAACW,EAAA,EAAD,CAAK/J,KAAK,OAAOgK,QAAQ,SAASC,MAAM,UACtCd,EAAAxG,EAAAyG,cAACc,EAAA,EAAD,CAAKR,GAAI,IACPP,EAAAxG,EAAAyG,cAAC1K,EArDgB,CACzBmL,WAAY,CACVH,GAAI,CACFC,KAAM,GACNQ,OAAQ,GAEVP,GAAI,CACFD,KAAM,GACNQ,OAAQ,KA8CFhB,EAAAxG,EAAAyG,cAACvK,EAAD,CAAKI,MAAOmC,IAAcL,EAASpB,QACjCwJ,EAAAxG,EAAAyG,cAACgB,EAAA,EAAD,CAAOC,MAAO,CAAEC,OAAQ,WAAajG,MAAOtD,EAASpB,QACnDwJ,EAAAxG,EAAAyG,cAACjL,EAAYiK,EACXe,EAAAxG,EAAAyG,cAAA,KAAGmB,UAAU,wBACXpB,EAAAxG,EAAAyG,cAACoB,EAAA,EAAD,CAAMxK,KAAK,WAEbmJ,EAAAxG,EAAAyG,cAAA,KAAGmB,UAAU,mBAAmBzF,EAAShE,QAAQ2J,QAIpDrJ,IAAcL,EAASpB,OAASgH,IAAQ1H,MAAM6F,EAAShE,QAAQ4J,OAAS,QAI/EvB,EAAAxG,EAAAyG,cAACc,EAAA,EAAD,CAAKR,GAAI,IACPP,EAAAxG,EAAAyG,cAAC1K,EAAD,CACEiM,eAAgBnJ,EAAU,aAAe,GACzCoJ,MAAO9F,EAAShE,QAAQA,QACxB+J,aAAW,GAEV3C,EAAkB,UAAW,CAC5B4C,aAAcpJ,EACdqJ,SAAqB,OAAX1J,GAAmBF,EAC7B6J,MAAO,CACL,CACEC,UAAU,EACVtE,QAAS7B,EAAShE,QAAQkK,MAAMlK,QAAQmK,YAN7C/C,CAUCiB,EAAAxG,EAAAyG,cAAC8B,EAAA,EAAD,CAAQC,UAAU,OAAOtC,SAAUrG,EAAKsE,cACrCmC,MAMTE,EAAAxG,EAAAyG,cAACc,EAAA,EAAD,CAAKR,GAAI,IACPP,EAAAxG,EAAAyG,cAAC1K,EAAD,CAAiBkM,MAAO9F,EAAShE,QAAQO,OAAQwJ,aAAW,GACzD3C,EAAkB,SAAU,CAC3B4C,aAAcnJ,EACdqJ,MAAO,CACL,CACEC,UAAU,EACVtE,QAAS7B,EAAShE,QAAQkK,MAAM3J,OAAO4J,YAL5C/C,CASCiB,EAAAxG,EAAAyG,cAAC8B,EAAA,EAAD,CAAQH,UAAWvI,EAAKmF,aAAahI,OAAQkJ,SAAUrG,EAAKiF,cACzDjF,EAAKmF,aAAahC,IAAI,SAAAsB,GACrB,OAAOkC,EAAAxG,EAAAyG,cAAC5K,EAAD,CAAQ6G,IAAK4B,EAAQ5B,KAAM4B,EAAQlF,WAKlDoH,EAAAxG,EAAAyG,cAAC1K,EAAD,CAAiBkM,MAAO9F,EAAShE,QAAQQ,OAAQuJ,aAAW,GACzD3C,EAAkB,SAAU,CAC3B4C,aAAclJ,EACdoJ,MAAO,CACL,CACEC,UAAU,EACVtE,QAAS7B,EAAShE,QAAQkK,MAAM1J,OAAO2J,YAL5C/C,CASCiB,EAAAxG,EAAAyG,cAAC8B,EAAA,EAAD,CAAQrC,SAAUrG,EAAKkF,aAAcqD,SAAqB,OAAX1J,GAAmBF,GAC/DqB,EAAK0C,aAAaS,IAAI,SAAAsB,GACrB,OACEkC,EAAAxG,EAAAyG,cAAC5K,EAAD,CAAQ6G,IAAK4B,EAAQ5B,IAAKhC,MAAO4D,EAAQ5B,KACtC4B,EAAQO,WAOrB2B,EAAAxG,EAAAyG,cAAC1K,EAAD,CACEkM,MAAO9F,EAAShE,QAAQsK,aACxBP,aAAW,EACXQ,KAAMvG,EAAShE,QAAQwK,kBAEtBpD,EAAkB,QAAS,CAC1B6C,SAAU5J,EACV6J,MAAO,CACL,CACEhL,KAAM,QACN2G,QAAS7B,EAAShE,QAAQkK,MAAMvE,MAAMzG,MAExC,CACEiL,UAAU,EACVtE,QAAS7B,EAAShE,QAAQkK,MAAMvE,MAAMwE,YAT3C/C,CAYEiB,EAAAxG,EAAAyG,cAACmC,EAAA,EAAD,CAAOR,UAAWlJ,EAASJ,QAAQ9B,YAG1CwJ,EAAAxG,EAAAyG,cAACc,EAAA,EAAD,CAAKR,GAAI,IACPP,EAAAxG,EAAAyG,cAAC1K,EAAD,CACE2L,MAAO,CACLmB,QAAS,OACTC,eAAgB,SAChBC,aAAc,IAGdvK,EAqBE,KApBFgI,EAAAxG,EAAAyG,cAACW,EAAA,EAAD,CAAKC,QAAQ,SAAShK,KAAK,QACzBmJ,EAAAxG,EAAAyG,cAACuC,EAAA,EAAD,CACEtB,MAAO,CAAEuB,UAAW,IACpBpB,KAAK,SACLxK,KAAK,UACL6L,SAAS,SACTrD,KAAK,QACLhH,QAASR,EACT+J,UACGvI,EAAKmF,aAAahI,SAClB2B,IACAD,IACAmB,EAAKxD,MAAMsG,KAAKwG,cAAc,WAC9BtJ,EAAKxD,MAAMsG,KAAKwG,cAAc,SAASnM,QACxCiG,IAAUmG,UAAU5D,MAGrBnH,EAAY8D,EAAShE,QAAQE,UAAY8D,EAAShE,QAAQkL,wBAY/EC,aAAe,WACTzJ,EAAK9B,MAAMK,SAASpB,QACtB6C,EAAKQ,SAAS,CACZ/B,SAAS,OAKfiL,aAAe,WACb1J,EAAKQ,SAAS,CACZ/B,SAAS,OAIbkL,YAAc,SAAAC,GACZ5J,EAAKQ,SAAS,CACZzB,SAAU6K,OAIdC,SAAW,SAAA/D,GAAQ,IAAAgE,EACgB9J,EAAK9B,MAA9BS,EADSmL,EACTnL,WAAYJ,EADHuL,EACGvL,SACpB,IAAKI,EAAY,CACf,IAAIiD,EAAM,GACVrD,EAAS4E,IAAI,SAAAP,GAIX,OAHIA,EAAKmH,MAAQjE,EAAKiE,KACpBnI,EAAIK,KAAKW,GAEJhB,IAEJA,EAAIzE,QAAQ6C,EAAK0J,eACtB1J,EAAKQ,SAAS,CACZjC,SAAUqD,QAKhBoI,cAAgB,SAAA5H,GACdpC,EAAKQ,SAAS,CACZpC,YAAagE,EAAEtD,OAAO+B,WAI1BoJ,IAAM,SAAMlG,GAAN,OAAA7D,EAAAC,EAAAC,MAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,OACJP,EAAKQ,SAAS,CACZX,WAAYkE,IAEdoG,SAASC,eAAerG,GAAIsG,SAJxB,wBAAAH,EAAAlJ,aA2CNsJ,eAAiB,SAAAC,GAAS,IAChBzK,EAAaE,EAAK9B,MAAlB4B,SAEJ8B,EAAM2I,EAAMC,QAAQ,GAGxB,GAFY,SAAR5I,IAAgBA,EAAM,QAEtB9B,EAAU,CACZ,IAAM2K,GAA0B,GAAlBC,WAAW9I,GAAa,KAAK4I,QAAQ,GACnD5I,EAAM8I,WAAW9I,GAAO8I,WAAWD,GAErC,OAAO7I,KAGT0C,aAAe,SAAAzD,GACb,IAAIe,EAAM5B,EAAK9B,MAAMoB,WACrBsC,EAAInC,QAAUoB,EACdb,EAAKQ,SAAS,CACZlB,WAAYsC,2EArDT,IAAA+I,EAAAC,KACL,GAA2B,IAAvBA,KAAK1M,MAAMyB,QAAe,CACXiL,KAAKpO,MAAdsG,KACHC,eAAe,SAACC,EAAKC,GACxB,IAAID,EAAJ,CAIA,IAAMrD,EAAUgL,EAAKzM,MAAMyB,QAAU,EACjCnE,EAAUyH,EAAOxD,SAASoL,UAC5B5H,EAAO4H,UAAYrP,EAAUyH,EAAOxD,SAASoL,UAC7CF,EAAKnK,SAAS,CAAEb,UAASL,WAAY2D,EAAQnD,UAAU,WAMtD,CACL,IAAIgL,EAAM,EACiB,IAAvBF,KAAK1M,MAAMyB,SAA4C,MAA3BiL,KAAK1M,MAAME,cACzC0M,EAAM,GAER,IAAMnL,EAAUiL,KAAK1M,MAAMyB,QAAUmL,EACrCF,KAAKpK,SAAS,CAAEb,4CAKlB,IAAIoL,EAAO,EACgB,IAAvBH,KAAK1M,MAAMyB,SAA4C,MAA3BiL,KAAK1M,MAAME,cACzC2M,EAAO,GAET,IAAMpL,EAAUiL,KAAK1M,MAAMyB,QAAUoL,EACrCH,KAAKpK,SAAS,CAAEb,6CAwBT,IAAAqL,EAAAJ,KAEGtI,EACNsI,KAAKpO,MADP+F,KAAQD,SAEFvD,EAAa6L,KAAK1M,MAAlBa,SACR,MAAiB,YAAbA,EACK6L,KAAKrF,cAEG,UAAbxG,EAEA4H,EAAAxG,EAAAyG,cAAA,OAAKiB,MAAO,CAAEoB,eAAgB,UAAYlB,UAAU,iCAClDpB,EAAAxG,EAAAyG,cAAA,OAAKmB,UAAU,sBACbpB,EAAAxG,EAAAyG,cAAC9J,EAAD,CACEmO,IAAG,GAAAnG,OAAKxG,GAAL,sCACHU,QAAS,kBAAM2H,EAAAxG,EAAAyG,cAAA,WAAMtE,EAAShE,QAAQU,QAAvB,QACfvC,MAAO,kBAAMkK,EAAAxG,EAAAyG,cAAA,uBAEfD,EAAAxG,EAAAyG,cAAA,UAAKtE,EAAShE,QAAQ4M,cACtBvE,EAAAxG,EAAAyG,cAAA,SAAItE,EAAShE,QAAQ6M,iBACrBxE,EAAAxG,EAAAyG,cAACwE,EAAA,EAAD,MACAzE,EAAAxG,EAAAyG,cAAChK,EAAD,KACE+J,EAAAxG,EAAAyG,cAACuC,EAAA,EAAD,CACEkC,QAAS,WACPL,EAAKrB,YAAY,YAEnBnM,KAAK,UACLwI,KAAK,SAEJ1D,EAAShE,QAAQgN,aAOb,YAAbvM,EAEA4H,EAAAxG,EAAAyG,cAAA,OAAKiB,MAAO,CAAEoB,eAAgB,UAAYlB,UAAU,iCAClDpB,EAAAxG,EAAAyG,cAAA,OAAKmB,UAAU,sBACbpB,EAAAxG,EAAAyG,cAAC9J,EAAD,CACEmO,IAAG,GAAAnG,OAAKxG,GAAL,wCACHU,QAAS,kBACP2H,EAAAxG,EAAAyG,cAAA,WACED,EAAAxG,EAAAyG,cAAClK,EAAD,QAGJD,MAAO,kBAAMkK,EAAAxG,EAAAyG,cAAA,uBAEfD,EAAAxG,EAAAyG,cAAA,UACED,EAAAxG,EAAAyG,cAAC2E,EAAA,EAAD,CAAMvF,KAAK,UADb,SACgC1D,EAAShE,QAAQkN,mBAdzD,SAzsBkBC,IAAMC,WA4uBbC,mBANf,SAAyBzN,GACvB,MAAO,CACLI,QAASJ,EAAM0N,YAAYtN,UAR/B,SAA4BuN,GAC1B,MAAO,CACLnK,WAAYoK,YAAmBC,EAAgBF,KAUpCF,CAGb7P,IAAKkQ,QAALlQ,CAAcmQ,YAAWC,YAAWjO,OCxyBvBkO,GAVE,SAAA3P,GAAS,IAChB4P,EAAyC5P,EAAzC4P,cAAe9N,EAA0B9B,EAA1B8B,QAAS+N,EAAiB7P,EAAjB6P,aAMhC,OAAO1F,EAAAxG,EAAAyG,cAAC0F,GAAD,CAASD,aAAcA,EAAc/N,QAASA,EAAS8N,cAJvC,SAAAvL,GACrBuL,EAAcvL,OC0BHoL,sBAzBU,SAAAzP,GAAS,IAEtB8F,EACN9F,EADF+F,KAAQD,SAEV,OACEqE,EAAAxG,EAAAyG,cAAC2F,EAAA,EAAD,CAAW/O,KAAK,SAASuK,UAAU,cACjCpB,EAAAxG,EAAAyG,cAAA,OAAK/D,IAAI,IAAIkF,UAAU,iCACrBpB,EAAAxG,EAAAyG,cAAA,OAAKmB,UAAU,gCACbpB,EAAAxG,EAAAyG,cAAA,WAASmB,UAAU,WACjBpB,EAAAxG,EAAAyG,cAAA,OAAKmB,UAAU,mBACbpB,EAAAxG,EAAAyG,cAAA,OAAKmB,UAAU,gBACbpB,EAAAxG,EAAAyG,cAAA,WAASmB,UAAU,qBACjBpB,EAAAxG,EAAAyG,cAAA,cAAMtE,EAAShE,QAAQkO,cACvB7F,EAAAxG,EAAAyG,cAAA,KAAGmB,UAAU,6BAA6BzF,EAAShE,QAAQmO,iBAC3D9F,EAAAxG,EAAAyG,cAAA,mDACAD,EAAAxG,EAAAyG,cAAC8F,GAAD","file":"static/js/35.caef53f0.chunk.js","sourcesContent":["import { keyframes, css } from 'styled-components';\r\n\r\nconst fadeInKeyframes = keyframes`\r\n  from {\r\n    filter: blur(5px);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    filter: blur(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const fadeIn = ({ time = '0.5s', type = 'ease' } = {}) =>\r\n  css`\r\n    animation: ${time} ${fadeInKeyframes} ${type};\r\n  `;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { bindActionCreators } from 'redux';\r\nimport ImageLoader from 'react-loading-image';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Upload,\r\n  Divider,\r\n  message,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Icon,\r\n  Badge,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport * as processActions from 'reducers/process';\r\nimport { sendFile, getApiEngines, getProcessByListId } from './../../services';\r\nimport functions from './../../utils/functions';\r\nimport { fadeIn } from 'styles/animation';\r\nimport './index.css';\r\n\r\nconst countries = require('./../../utils/countries').default;\r\nconst Dragger = Upload.Dragger;\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst FormItemWrapper = styled(FormItem)`\r\n  margin-bottom: 5px !important;\r\n  & {\r\n    .ant-form-item-label {\r\n      line-height: 20px;\r\n    }\r\n    .ant-form-explain {\r\n      color: #0f416a;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  ${props => (props.error ? `  border: 2px dashed #ea2020` : null)};\r\n`;\r\nconst Loading = styled.div`\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst DivButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IL = styled(ImageLoader)`\r\n  ${fadeIn()}\r\n  max-width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst jsUcfirst = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nclass Process extends React.Component {\r\n  state = {\r\n    allowedFiles: '',\r\n    showBilling: '0',\r\n    secret: null,\r\n    process: [],\r\n    fileList: [],\r\n    uploading: false,\r\n    visible: false,\r\n    payVisible: false,\r\n    processEnd: false,\r\n    showError: false,\r\n    source: null,\r\n    target: null,\r\n    viewNoty: 'process',\r\n    loading: false,\r\n    engines: [],\r\n    defaultValue: [],\r\n    defaultSourceValue: null,\r\n    defaultTargetValue: null,\r\n    selected: {\r\n      engines: [],\r\n    },\r\n    formValues: {\r\n      name: '',\r\n      address: '',\r\n      country: 'ES',\r\n      vattax: '',\r\n    },\r\n    current: 0,\r\n    processSelected: null,\r\n    loadingPay: false,\r\n    applyTax: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getEngines();\r\n  };\r\n\r\n  getEngines = async () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const engines = await getApiEngines();\r\n      if (engines.data.process && engines.data.process.length) {\r\n        this.setState({\r\n          engines: engines.data.process,\r\n          allowedFiles: engines.data.allowedFiles,\r\n          defaultValue: jsUcfirst(engines.data.value),\r\n        });\r\n        this.initSelected(engines.data.value, engines.data.process);\r\n      }\r\n\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  getProcess = async () => {\r\n    const self = this;\r\n    const {\r\n      history,\r\n      processAct: { setProcessSelected },\r\n    } = this.props;\r\n    const result = setInterval(async () => {\r\n      const aux = await getProcessByListId({\r\n        secret: self.state.secret,\r\n      });\r\n      let count = 0;\r\n      if (aux.data.length && aux.data[0].status === 'quote_ready') {\r\n        setProcessSelected(aux.data[0]);\r\n        self.setState({\r\n          process: aux.data,\r\n          payVisible: true,\r\n        });\r\n        history.push('/main/process/pay');\r\n        clearInterval(result);\r\n      }\r\n      if (count > 60) {\r\n        history.push('/main');\r\n        clearInterval(result);\r\n      }\r\n      count++;\r\n    }, 1000);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      intl: { messages },\r\n    } = this.props;\r\n    const { target, fileList, selected } = this.state;\r\n    const targets = this.getTargets();\r\n\r\n    // eslint-disable-next-line array-callback-return\r\n    const nameEng = targets.filter(item => {\r\n      if (item && item.key === target) {\r\n        return item;\r\n      }\r\n    })[0];\r\n\r\n    if (nameEng) {\r\n      this.setState({\r\n        target,\r\n        showError: false,\r\n        viewNoty: 'process',\r\n        current: 0,\r\n        formValues: {\r\n          name: '',\r\n          address: '',\r\n          country: 'ES',\r\n          vattax: '',\r\n        },\r\n        applyTax: false,\r\n      });\r\n    }\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (fileList.length) {\r\n          const promises = fileList.map(item => {\r\n            return functions.getBase64(item.originFileObj);\r\n          });\r\n\r\n          const secret = Math.random()\r\n            .toString(36)\r\n            .slice(-8);\r\n          this.setState({ secret });\r\n\r\n          Promise.all(promises)\r\n            .then(files => {\r\n              let aux = values.target.split('-');\r\n              let form = {\r\n                secret: secret,\r\n                process: {\r\n                  id: aux[0],\r\n                  name: selected.name,\r\n                },\r\n                engine: nameEng,\r\n                source: {\r\n                  id: aux[0],\r\n                  name: selected.name,\r\n                },\r\n                files: files,\r\n                email: values.email,\r\n              };\r\n              this.setState({\r\n                uploading: true,\r\n              });\r\n              sendFile(form)\r\n                .then(() => {\r\n                  message.success(messages.default.success);\r\n                  this.setState({\r\n                    uploading: false,\r\n                    viewNoty: 'success',\r\n                    fileList: [],\r\n                  });\r\n                  this.getProcess();\r\n                })\r\n                .catch(error => {\r\n                  message.error(error.message);\r\n                  this.setState({\r\n                    uploading: false,\r\n                    viewNoty: 'error',\r\n                  });\r\n                });\r\n            })\r\n            .catch(err => {\r\n              message.error(err.message);\r\n            });\r\n        } else {\r\n          this.setState({\r\n            showError: true,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = value => {\r\n    let selected = null;\r\n    let array = [];\r\n\r\n    this.state.engines.forEach(element => {\r\n      if (element.name === value.toLowerCase()) {\r\n        this.setState({\r\n          selected: element,\r\n        });\r\n        selected = element;\r\n      }\r\n    });\r\n\r\n    if (selected) {\r\n      if (selected.engines && selected.engines.length) {\r\n        selected.engines.forEach(element => {\r\n          let flag = false;\r\n          for (let i = 0; i < array.length; i++) {\r\n            if (array[i].key === element.source) {\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!flag) {\r\n            let key = element.source;\r\n            array.push({\r\n              key,\r\n              id: element.id,\r\n              name: functions.languages[key],\r\n              target: element.target,\r\n              source: element.source,\r\n            });\r\n          }\r\n        });\r\n        if (array.length) {\r\n          this.setState({\r\n            defaultSourceValue: array[0].name,\r\n            source: array[0].source,\r\n            target: `${array[0].id}-${array[0].target}`,\r\n            defaultTargetValue: this.getTargets(selected.engines, array[0].source)[0].name,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  initSelected = (value, sources) => {\r\n    let selected = null;\r\n    let array = [];\r\n    const self = this;\r\n    for (let i = 0; i < sources.length; i++) {\r\n      if (sources[i].name === value) {\r\n        self.setState({\r\n          selected: sources[i],\r\n        });\r\n        selected = sources[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (selected) {\r\n      if (selected.engines && selected.engines.length) {\r\n        selected.engines.forEach(element => {\r\n          let flag = false;\r\n          for (let i = 0; i < array.length; i++) {\r\n            if (array[i].key === element.source) {\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!flag) {\r\n            let key = element.source;\r\n            array.push({\r\n              key,\r\n              id: element.id,\r\n              name: functions.languages[key],\r\n              target: element.target,\r\n              source: element.source,\r\n            });\r\n          }\r\n        });\r\n        if (array.length) {\r\n          this.setState({\r\n            defaultSourceValue: array[0].name,\r\n            source: array[0].source,\r\n            target: `${array[0].id}-${array[0].target}`,\r\n            defaultTargetValue: this.getTargets(selected.engines, array[0].source)[0].text,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  changeSource = source => {\r\n    this.setState({\r\n      source,\r\n    });\r\n  };\r\n\r\n  changeTarget = target => {\r\n    this.setState({\r\n      target,\r\n    });\r\n  };\r\n\r\n  getSources = () => {\r\n    const { selected } = this.state;\r\n    let array = [];\r\n    if (selected.engines && selected.engines.length) {\r\n      selected.engines.forEach(element => {\r\n        let flag = false;\r\n        for (let i = 0; i < array.length; i++) {\r\n          if (array[i].key === element.source) {\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          let key = element.source;\r\n          array.push({ key, name: functions.languages[key] });\r\n        }\r\n      });\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  getTargets = (engines = null, _source = null) => {\r\n    const { selected, source } = this.state;\r\n    if (!engines) {\r\n      engines = selected.engines;\r\n    }\r\n    if (!_source) {\r\n      _source = source;\r\n    }\r\n\r\n    let array = [];\r\n    engines.forEach(element => {\r\n      let flag = false;\r\n      for (let i = 0; i < array.length; i++) {\r\n        if (array[i].key === element.target) {\r\n          flag = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_source) {\r\n        if (!flag && element.source === _source) {\r\n          if (element.domain) {\r\n            element['key'] = `${element.id}-${element.target}`;\r\n            element['text'] = `${functions.languages[element.target]} - ${element.name} - ${\r\n              element.domain\r\n            }`;\r\n          } else {\r\n            element['key'] = `${element.id}-${element.target}`;\r\n            element['text'] = `${functions.languages[element.target]} - ${element.name}`;\r\n          }\r\n          array.push(element);\r\n        }\r\n      }\r\n    });\r\n    return array;\r\n  };\r\n\r\n  renderForms = () => {\r\n    const {\r\n      intl: { messages },\r\n    } = this.props;\r\n    const {\r\n      allowedFiles,\r\n      engines,\r\n      loading,\r\n      fileList,\r\n      showError,\r\n      defaultValue,\r\n      source,\r\n      processEnd,\r\n      defaultSourceValue,\r\n      defaultTargetValue,\r\n      selected,\r\n      uploading,\r\n      target,\r\n    } = this.state;\r\n\r\n    const {\r\n      form: { getFieldDecorator, getFieldsError },\r\n    } = this.props;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n      },\r\n    };\r\n\r\n    const dprops = {\r\n      beforeUpload: file => {\r\n        const isLt2M = file.size / 1024 / 1024 < 500;\r\n        if (!functions.checkFile(file, allowedFiles)) {\r\n          message.error(messages.process.error.uploadOne.replace('allowedFiles', allowedFiles));\r\n        } else if (!isLt2M) {\r\n          message.error(messages.process.error.uploadTwo);\r\n        }\r\n        return false;\r\n      },\r\n      onChange: info => {\r\n        let aux = [];\r\n        info.fileList.map(item => {\r\n          if (functions.checkFile(item, allowedFiles)) {\r\n            aux.push(item);\r\n          }\r\n          return aux;\r\n        });\r\n        this.setState({\r\n          fileList: aux,\r\n        });\r\n      },\r\n      multiple: false,\r\n      fileList,\r\n      showUploadList: true,\r\n    };\r\n    let options = [];\r\n    if (engines.length) {\r\n      options = engines.map(d => (\r\n        <Option key={d.id} value={d.name.replace(/^\\w/, c => c.toUpperCase())}>\r\n          {d.name.replace(/^\\w/, c => c.toUpperCase())}\r\n        </Option>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n          <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n            <Col xs={24}>\r\n              <FormItemWrapper {...tailFormItemLayout}>\r\n                <Div error={showError && !fileList.length}>\r\n                  <Badge style={{ cursor: 'pointer' }} count={fileList.length}>\r\n                    <Dragger {...dprops}>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <Icon type=\"inbox\" />\r\n                      </p>\r\n                      <p className=\"ant-upload-text\">{messages.process.drag}</p>\r\n                    </Dragger>\r\n                  </Badge>\r\n\r\n                  {showError && !fileList.length ? message.error(messages.process.alert) : null}\r\n                </Div>\r\n              </FormItemWrapper>\r\n            </Col>\r\n            <Col xs={24}>\r\n              <FormItemWrapper\r\n                validateStatus={loading ? 'validating' : ''}\r\n                label={messages.process.process}\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator('process', {\r\n                  initialValue: defaultValue,\r\n                  disabled: source === null || processEnd,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.process.required,\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Select autofocus=\"true\" onChange={this.handleChange}>\r\n                    {options}\r\n                  </Select>\r\n                )}\r\n              </FormItemWrapper>\r\n            </Col>\r\n\r\n            <Col xs={24}>\r\n              <FormItemWrapper label={messages.process.source} hasFeedback>\r\n                {getFieldDecorator('source', {\r\n                  initialValue: defaultSourceValue,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.source.required,\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Select disabled={!this.getSources().length} onChange={this.changeSource}>\r\n                    {this.getSources().map(element => {\r\n                      return <Option key={element.key}>{element.name}</Option>;\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </FormItemWrapper>\r\n              <FormItemWrapper label={messages.process.target} hasFeedback>\r\n                {getFieldDecorator('target', {\r\n                  initialValue: defaultTargetValue,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.target.required,\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Select onChange={this.changeTarget} disabled={source === null || processEnd}>\r\n                    {this.getTargets().map(element => {\r\n                      return (\r\n                        <Option key={element.key} value={element.key}>\r\n                          {element.text}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </FormItemWrapper>\r\n              <FormItemWrapper\r\n                label={messages.process.notification}\r\n                hasFeedback\r\n                help={messages.process.notificationHelp}\r\n              >\r\n                {getFieldDecorator('email', {\r\n                  disabled: processEnd,\r\n                  rules: [\r\n                    {\r\n                      type: 'email',\r\n                      message: messages.process.rules.email.type,\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.email.required,\r\n                    },\r\n                  ],\r\n                })(<Input disabled={!selected.engines.length} />)}\r\n              </FormItemWrapper>\r\n            </Col>\r\n            <Col xs={24}>\r\n              <FormItemWrapper\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  marginBottom: 0,\r\n                }}\r\n              >\r\n                {!processEnd ? (\r\n                  <Row justify=\"center\" type=\"flex\">\r\n                    <Button\r\n                      style={{ marginTop: 10 }}\r\n                      icon=\"upload\"\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      size=\"large\"\r\n                      loading={uploading}\r\n                      disabled={\r\n                        !this.getSources().length ||\r\n                        !target ||\r\n                        !source ||\r\n                        !this.props.form.getFieldValue('email') ||\r\n                        !this.props.form.getFieldValue('email').length ||\r\n                        functions.hasErrors(getFieldsError())\r\n                      }\r\n                    >\r\n                      {uploading ? messages.process.uploading : messages.process.uploadingLoad}\r\n                    </Button>\r\n                  </Row>\r\n                ) : null}\r\n              </FormItemWrapper>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  showListFile = () => {\r\n    if (this.state.fileList.length) {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  hideListFile = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  setViewNoty = view => {\r\n    this.setState({\r\n      viewNoty: view,\r\n    });\r\n  };\r\n\r\n  onRemove = file => {\r\n    const { processEnd, fileList } = this.state;\r\n    if (!processEnd) {\r\n      let aux = [];\r\n      fileList.map(item => {\r\n        if (item.uid !== file.uid) {\r\n          aux.push(item);\r\n        }\r\n        return aux;\r\n      });\r\n      if (!aux.length) this.hideListFile();\r\n      this.setState({\r\n        fileList: aux,\r\n      });\r\n    }\r\n  };\r\n\r\n  onRadioChange = e => {\r\n    this.setState({\r\n      showBilling: e.target.value,\r\n    });\r\n  };\r\n\r\n  pay = async id => {\r\n    this.setState({\r\n      loadingPay: id,\r\n    });\r\n    document.getElementById(id).submit();\r\n  };\r\n\r\n  next() {\r\n    if (this.state.current === 1) {\r\n      const { form } = this.props;\r\n      form.validateFields((err, values) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n        // form.resetFields();\r\n        const current = this.state.current + 1;\r\n        if (countries[values.country].continent === 'EU') {\r\n          values.continent = countries[values.country].continent;\r\n          this.setState({ current, formValues: values, applyTax: true });\r\n        } else {\r\n          values.continent = countries[values.country].continent;\r\n          this.setState({ current, formValues: values, applyTax: true });\r\n        }\r\n      });\r\n    } else {\r\n      let sum = 1;\r\n      if (this.state.current === 0 && this.state.showBilling === '2') {\r\n        sum = 2;\r\n      }\r\n      const current = this.state.current + sum;\r\n      this.setState({ current });\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    let rest = 1;\r\n    if (this.state.current === 2 && this.state.showBilling === '2') {\r\n      rest = 2;\r\n    }\r\n    const current = this.state.current - rest;\r\n    this.setState({ current });\r\n  }\r\n\r\n  calculatePrice = price => {\r\n    const { applyTax } = this.state;\r\n\r\n    let aux = price.toFixed(2);\r\n    if (aux === '0.00') aux = '0.01';\r\n\r\n    if (applyTax) {\r\n      const tax = ((parseFloat(aux) * 21) / 100).toFixed(2);\r\n      aux = parseFloat(aux) + parseFloat(tax);\r\n    }\r\n    return aux;\r\n  };\r\n\r\n  handleChange = value => {\r\n    let aux = this.state.formValues;\r\n    aux.country = value;\r\n    this.setState({\r\n      formValues: aux,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      intl: { messages },\r\n    } = this.props;\r\n    const { viewNoty } = this.state;\r\n    if (viewNoty === 'process') {\r\n      return this.renderForms();\r\n    }\r\n    if (viewNoty === 'error') {\r\n      return (\r\n        <div style={{ justifyContent: 'center' }} className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-8 col-8 p-4\">\r\n            <IL\r\n              src={`${process.env.PUBLIC_URL}/images/undraw_bug_fixing_oc7a.svg`}\r\n              loading={() => <div>{messages.process.loading}...</div>}\r\n              error={() => <div>Error</div>}\r\n            />\r\n            <h2>{messages.process.errorProcess}</h2>\r\n            <p>{messages.process.errorProcessSub}</p>\r\n            <Divider />\r\n            <DivButtons>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setViewNoty('process');\r\n                }}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                {messages.process.tryAgain}\r\n              </Button>\r\n            </DivButtons>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (viewNoty === 'success') {\r\n      return (\r\n        <div style={{ justifyContent: 'center' }} className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-8 col-8 p-4\">\r\n            <IL\r\n              src={`${process.env.PUBLIC_URL}/images/undraw_confirmation_2uy0.svg`}\r\n              loading={() => (\r\n                <div>\r\n                  <Loading></Loading>\r\n                </div>\r\n              )}\r\n              error={() => <div>Error</div>}\r\n            />\r\n            <h2>\r\n              <Spin size=\"large\" /> &nbsp; {messages.process.processing}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    processAct: bindActionCreators(processActions, dispatch),\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    process: state.rootReducer.process,\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Form.create()(injectIntl(withRouter(Process))));\r\n","import React from 'react';\r\nimport Process from './../Process';\r\n\r\nconst FreeUser = props => {\r\n  const { selectProcess, process, changeFileID } = props;\r\n\r\n  const _selectProcess = value => {\r\n    selectProcess(value);\r\n  };\r\n\r\n  return <Process changeFileID={changeFileID} process={process} selectProcess={_selectProcess} />;\r\n};\r\n\r\nexport default FreeUser;\r\n","import React from 'react';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport './index.css';\r\n\r\nimport FreeUser from '../../components/FreeUser';\r\n\r\nconst ProcessComponent = props => {\r\n  const {\r\n    intl: { messages },\r\n  } = props;\r\n  return (\r\n    <QueueAnim type=\"bottom\" className=\"ui-animate\">\r\n      <div key=\"1\" className=\"row justify-content-md-center\">\r\n        <div className=\"form-card__body col-md-6 p-4\">\r\n          <article className=\"article\">\r\n            <div className=\"box box-default\">\r\n              <div className=\"box-body p-4\">\r\n                <section className=\"form-v1-container\">\r\n                  <h2> {messages.process.processAFile}</h2>\r\n                  <p className=\"lead col-lg-10 mx-lg-auto\">{messages.process.subProcessAFile}</p>\r\n                  <p>(docx | xlsx | pptx | pdf | odt | odp)</p>\r\n                  <FreeUser />\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </QueueAnim>\r\n  );\r\n};\r\nexport default injectIntl(ProcessComponent);\r\n"],"sourceRoot":""}