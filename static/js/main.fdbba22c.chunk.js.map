{"version":3,"sources":["utils/auth.js","reducers/process.js","reducers/notification.js","components/IntlWrapper/index.js","components/AppComponents/ScrollToTop/index.js","components/PrivateRoute/index.js","components/App.js","components/Root.js","serviceWorker.js","reducers/index.js","index.js","store/configureStore.js","reducers/auth.js","components/AppComponents/Loading/Loader.js","components/AppComponents/Loading/index.js"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","parse","JSON","stringify","auth","clear","key","localStorage","getItem","removeItem","sessionStorage","clearAppStorage","clearToken","tokenKey","arguments","length","undefined","clearUserInfo","userInfo","get","getToken","getUserInfo","set","value","isLocalStorage","isEmpty","setItem","setToken","setUserInfo","fetchRequest","createAction","loading","fetchResponse","getEngines","engines","defaultValue","selectProcess","selected","setProcessSelected","processSelected","changeFileID","fileId","createReducer","_createReducer","Object","D_Work_Pangeanic_Projects_Pgweb_pgwebclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","state","_ref","assign","_ref2","_ref3","_ref4","name","array","require","fetchAuth","accessToken","addNotifications","notifications","changeNotifications","concat","D_Work_Pangeanic_Projects_Pgweb_pgwebclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","addLocaleData","toConsumableArray","intlEN","intlES","messages","en","messages_en","es","messages_es","connect","lang","rootReducer","location","router","dispatch","authChangeLang","bindActionCreators","changeLang","props","children","langParam","pathname","react_default","a","createElement","index_es","locale","ScrollToTop","prevProps","this","window","scrollTo","React","Component","withRouter","PrivateRoute","component","rest","objectWithoutProperties","react_router","render","to","from","AsyncNotFound","loadable","loader","Promise","all","e","then","bind","LoadingComponent","AsyncDashboard","AsyncMain","App","id","path","components_PrivateRoute","exact","Root","_this$props","store","history","esm","locale_provider","enUS","components_IntlWrapper","AppComponents_ScrollToTop","Boolean","hostname","match","combineReducers","process","notification","d","__webpack_exports__","src_history","createBrowserHistory","basename","initialState","composeEnhancers","compose","createStore","connectRouter","configureStore","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister","fetchUser","user","Loader","spin","size","Loading","error","className","pastDelay","Loading_Loader"],"mappings":"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","file":"static/js/main.fdbba22c.chunk.js","sourcesContent":["import { isEmpty } from 'lodash';\n\nconst TOKEN_KEY = 'jwtToken';\nconst USER_INFO = 'userInfo';\n\nconst parse = JSON.parse;\nconst stringify = JSON.stringify;\n\nconst auth = {\n  /**\n   * Remove an item from the used storage\n   * @param  {String} key [description]\n   */\n  clear(key) {\n    if (localStorage && localStorage.getItem(key)) {\n      return localStorage.removeItem(key);\n    }\n\n    if (sessionStorage && sessionStorage.getItem(key)) {\n      return sessionStorage.removeItem(key);\n    }\n\n    return null;\n  },\n\n  /**\n   * Clear all app storage\n   */\n  clearAppStorage() {\n    if (localStorage) {\n      localStorage.clear();\n    }\n\n    if (sessionStorage) {\n      sessionStorage.clear();\n    }\n  },\n\n  clearToken(tokenKey = TOKEN_KEY) {\n    return auth.clear(tokenKey);\n  },\n\n  clearUserInfo(userInfo = USER_INFO) {\n    return auth.clear(userInfo);\n  },\n\n  /**\n   * Returns data from storage\n   * @param  {String} key Item to get from the storage\n   * @return {String|Object}     Data from the storage\n   */\n  get(key) {\n    if (localStorage && localStorage.getItem(key)) {\n      return parse(localStorage.getItem(key)) || null;\n    }\n\n    if (sessionStorage && sessionStorage.getItem(key)) {\n      return parse(sessionStorage.getItem(key)) || null;\n    }\n\n    return null;\n  },\n\n  getToken(tokenKey = TOKEN_KEY) {\n    return auth.get(tokenKey);\n  },\n\n  getUserInfo(userInfo = USER_INFO) {\n    return auth.get(userInfo);\n  },\n\n  /**\n   * Set data in storage\n   * @param {String|Object}  value    The data to store\n   * @param {String}  key\n   * @param {Boolean} isLocalStorage  Defines if we need to store in localStorage or sessionStorage\n   */\n  set(value, key, isLocalStorage) {\n    if (isEmpty(value)) {\n      return null;\n    }\n\n    if (isLocalStorage && localStorage) {\n      return localStorage.setItem(key, stringify(value));\n    }\n\n    if (sessionStorage) {\n      return sessionStorage.setItem(key, stringify(value));\n    }\n\n    return null;\n  },\n\n  setToken(value = '', isLocalStorage = false, tokenKey = TOKEN_KEY) {\n    return auth.set(value, tokenKey, isLocalStorage);\n  },\n\n  setUserInfo(value = '', isLocalStorage = false, userInfo = USER_INFO) {\n    return auth.set(value, userInfo, isLocalStorage);\n  },\n};\n\nexport default auth;\n","import { createAction, createReducer } from 'redux-act';\r\n\r\nconst initialState = {\r\n  selected: {\r\n    name: null,\r\n    engines: [],\r\n  },\r\n  loading: false,\r\n  engines: [],\r\n  defaultValue: null,\r\n  fileId: null,\r\n  processSelected: null,\r\n};\r\n\r\nexport const fetchRequest = createAction('fetch request', loading => ({\r\n  loading,\r\n}));\r\nexport const fetchResponse = createAction('fetch response', loading => ({\r\n  loading,\r\n}));\r\nexport const getEngines = createAction('get engines', (engines, defaultValue) => ({\r\n  engines,\r\n  defaultValue,\r\n}));\r\nexport const selectProcess = createAction('select process', selected => ({\r\n  selected,\r\n}));\r\nexport const setProcessSelected = createAction('set processSelected', processSelected => ({\r\n  processSelected,\r\n}));\r\nexport const changeFileID = createAction('change fileId', fileId => ({\r\n  fileId,\r\n}));\r\n\r\nexport default createReducer(\r\n  {\r\n    [setProcessSelected]: (state, { processSelected }) =>\r\n      Object.assign({}, state, { processSelected }),\r\n    [selectProcess]: (state, { selected }) => Object.assign({}, state, { selected }),\r\n    [getEngines]: (state, { engines, defaultValue }) =>\r\n      Object.assign({}, state, { engines, defaultValue }),\r\n    [changeFileID]: (state, { fileId }) => Object.assign({}, state, { fileId }),\r\n    [fetchRequest]: state => Object.assign({}, state, { loading: true }),\r\n    [fetchResponse]: state => Object.assign({}, state, { loading: false }),\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, createReducer } from 'redux-act';\nconst array = require('lodash/array');\n\nconst initialState = {\n  notifications: [],\n};\n\nexport const fetchAuth = createAction('fetch auth', ({ auth, accessToken }) => ({\n  auth,\n  accessToken,\n}));\nexport const addNotifications = createAction('add  notifications', notifications => ({\n  notifications,\n}));\nexport const changeNotifications = createAction('change  notifications', notifications => ({\n  notifications,\n}));\n\nexport default createReducer(\n  {\n    [changeNotifications]: (state, { notifications }) =>\n      Object.assign({}, state, { notifications }),\n    [addNotifications]: (state, { notifications }) => {\n      notifications = array.concat(state.notifications, notifications);\n\n      return {\n        ...state,\n        notifications,\n      };\n    },\n  },\n  initialState\n);\n","import React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport intlEN from 'react-intl/locale-data/en';\nimport intlES from 'react-intl/locale-data/es';\n\nimport messages_en from './../../translations/en.json';\nimport messages_es from './../../translations/es.json';\n\nimport { changeLang } from './../../reducers/auth';\n\naddLocaleData([...intlEN, ...intlES]);\nconst messages = {\n  en: messages_en,\n  es: messages_es,\n};\n\nconst IntlWrapper = props => {\n  const { children, lang, location, authChangeLang } = props;\n\n  let langParam = '';\n  langParam += location.pathname[1];\n  langParam += location.pathname[2];\n  if (langParam === 'en' || langParam === 'es') {\n    authChangeLang(langParam);\n  } else {\n    authChangeLang(lang);\n  }\n\n  return (\n    <IntlProvider key={lang} locale={lang} messages={messages[lang]}>\n      {children}\n    </IntlProvider>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    lang: state.rootReducer.auth.lang,\n    location: state.router.location,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authChangeLang: bindActionCreators(changeLang, dispatch),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IntlWrapper);\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\n// Utils\nimport auth from '../../utils/auth';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.getToken() !== null ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/signin',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport loadable from 'react-loadable';\nimport LoadingComponent from 'components/AppComponents/Loading';\nimport PrivateRoute from './PrivateRoute';\n\n// 3rd\nimport 'styles/antd.less';\nimport 'styles/bootstrap/bootstrap.scss';\n// custom\nimport 'styles/layout.scss';\nimport 'styles/theme.scss';\nimport 'styles/ui.scss';\nimport 'styles/vendors.scss';\n\nlet AsyncNotFound = loadable({\n  loader: () => import('components/NotFound'),\n  loading: LoadingComponent,\n});\nlet AsyncDashboard = loadable({\n  loader: () => import('containers/Dashboard'),\n  loading: LoadingComponent,\n});\nlet AsyncMain = loadable({\n  loader: () => import('containers/Main'),\n  loading: LoadingComponent,\n});\n\nclass App extends React.Component {\n  render() {\n    const { location } = this.props;\n    const isRoot = location.pathname === '/' ? true : false;\n    if (isRoot) {\n      return <Redirect to={'/main'} />;\n    }\n\n    return (\n      <div id=\"app\">\n        <Switch>\n          <Route path=\"/main\" component={AsyncMain} />\n          <PrivateRoute path=\"/dashboard\" component={AsyncDashboard} />\n          <Route exact path=\"/404\" component={AsyncNotFound} />\n\n          <Route render={() => <Redirect to=\"/404\" />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { LocaleProvider } from 'antd';\nimport enUS from 'antd/lib/locale-provider/en_US';\nimport IntlWrapper from 'components/IntlWrapper';\nimport ScrollToTop from 'components/AppComponents/ScrollToTop';\nimport App from './App';\n\nclass Root extends Component {\n  render() {\n    const { store, history } = this.props;\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <LocaleProvider locale={enUS}>\n            <IntlWrapper>\n              <ScrollToTop>\n                <Route path=\"/\" component={App} />\n              </ScrollToTop>\n            </IntlWrapper>\n          </LocaleProvider>\n        </ConnectedRouter>\n      </Provider>\n    );\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport process from './process';\nimport auth from './auth';\nimport notification from './notification';\n\nconst rootReducer = combineReducers({\n  process,\n  auth,\n  notification,\n});\n\nexport default rootReducer;\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport Root from 'components/Root';\r\nimport * as serviceWorker from 'serviceWorker';\r\nimport configureStore from 'store/configureStore';\r\n\r\nexport const history = createBrowserHistory({\r\n  basename: process.env.PUBLIC_URL,\r\n});\r\n\r\nconst initialState = {};\r\nconst store = configureStore(initialState, history);\r\n\r\nrender(<Root store={store} history={history} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, compose, combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport rootReducer from './../reducers';\n\nexport default function configureStore(initialState, history) {\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          shouldHotReload: false,\n        })\n      : compose;\n\n  const store = createStore(\n    combineReducers({\n      router: connectRouter(history),\n      rootReducer,\n      initialState,\n    }),\n\n    composeEnhancers()\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./../reducers', () => {\n      const nextReducer = require('./../reducers').default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n","import { createAction, createReducer } from 'redux-act';\n\nconst initialState = {\n  auth: false,\n  accessToken: null,\n  user: {},\n  lang: 'en',\n};\n\nexport const fetchAuth = createAction('fetch auth', ({ auth, accessToken }) => ({\n  auth,\n  accessToken,\n}));\nexport const fetchUser = createAction('fetch user', user => ({ user }));\n\nexport const changeLang = createAction('change language', lang => ({ lang }));\n\nexport default createReducer(\n  {\n    [fetchAuth]: (state, { auth, accessToken }) =>\n      Object.assign({}, state, {\n        auth,\n        accessToken,\n      }),\n    [fetchUser]: (state, { user }) => Object.assign({}, state, { user }),\n    [changeLang]: (state, { lang }) => Object.assign({}, state, { lang }),\n  },\n  initialState\n);\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => <Spin size=\"large\" />;\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Loader from './Loader';\r\n\r\nfunction Loading(props) {\r\n  if (props.error) {\r\n    return <div className=\"loader-container\">Error! Please refresh the page</div>;\r\n  } else if (props.pastDelay) {\r\n    return (\r\n      <div className=\"loader-container\">\r\n        {' '}\r\n        <Loader />{' '}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null; // Avoiding Flash Of Loading Component (<200ms)\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n"],"sourceRoot":""}