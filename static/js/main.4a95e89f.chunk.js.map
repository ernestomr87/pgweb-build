{"version":3,"sources":["utils/auth.js","reducers/process.js","reducers/notification.js","components/IntlWrapper/index.js","components/AppComponents/ScrollToTop/index.js","components/PrivateRoute/index.js","components/App.js","components/Root.js","serviceWorker.js","reducers/index.js","index.js","store/configureStore.js","config.js","reducers/auth.js","components/AppComponents/Loading/Loader.js","components/AppComponents/Loading/index.js"],"names":["lodash__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","parse","JSON","stringify","auth","clear","key","localStorage","getItem","removeItem","sessionStorage","clearAppStorage","clearToken","tokenKey","arguments","length","undefined","clearUserInfo","userInfo","get","getToken","getUserInfo","set","value","isLocalStorage","isEmpty","setItem","setToken","setUserInfo","fetchRequest","createAction","loading","fetchResponse","getEngines","engines","defaultValue","selectProcess","selected","setProcessSelected","processSelected","changeFileID","fileId","createReducer","_createReducer","Object","D_Work_Pangeanic_Pgweb_pgwebclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","state","_ref","assign","_ref2","_ref3","_ref4","name","array","require","fetchAuth","accessToken","addNotifications","notifications","changeNotifications","concat","D_Work_Pangeanic_Pgweb_pgwebclient_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","addLocaleData","toConsumableArray","intlEN","intlES","messages","en","messages_en","es","messages_es","connect","lang","rootReducer","location","router","dispatch","authChangeLang","bindActionCreators","changeLang","props","children","langParam","pathname","react_default","a","createElement","index_es","locale","ScrollToTop","prevProps","this","window","scrollTo","React","Component","withRouter","PrivateRoute","component","rest","objectWithoutProperties","react_router","render","to","from","AsyncNotFound","loadable","loader","Promise","all","e","then","bind","LoadingComponent","AsyncDashboard","AsyncMain","AppTheme","styled","div","_templateObject","config","default","theme","bg_color","border_color","App","styled_components_browser_esm","id","path","components_PrivateRoute","exact","Root","_this$props","store","history","esm","locale_provider","enUS","components_IntlWrapper","AppComponents_ScrollToTop","Boolean","hostname","match","combineReducers","process","notification","d","__webpack_exports__","src_history","createBrowserHistory","basename","initialState","composeEnhancers","compose","createStore","connectRouter","configureStore","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister","autheticity","title","bg","logo","logoMin","footer","hostApi","hostClient","primary_color","pangeanic","fetchUser","user","Loader","spin","size","Loading","error","className","pastDelay","Loading_Loader"],"mappings":"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","file":"static/js/main.4a95e89f.chunk.js","sourcesContent":["import { isEmpty } from 'lodash';\r\n\r\nconst TOKEN_KEY = 'jwtToken';\r\nconst USER_INFO = 'userInfo';\r\n\r\nconst parse = JSON.parse;\r\nconst stringify = JSON.stringify;\r\n\r\nconst auth = {\r\n  /**\r\n   * Remove an item from the used storage\r\n   * @param  {String} key [description]\r\n   */\r\n  clear(key) {\r\n    if (localStorage && localStorage.getItem(key)) {\r\n      return localStorage.removeItem(key);\r\n    }\r\n\r\n    if (sessionStorage && sessionStorage.getItem(key)) {\r\n      return sessionStorage.removeItem(key);\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  /**\r\n   * Clear all app storage\r\n   */\r\n  clearAppStorage() {\r\n    if (localStorage) {\r\n      localStorage.clear();\r\n    }\r\n\r\n    if (sessionStorage) {\r\n      sessionStorage.clear();\r\n    }\r\n  },\r\n\r\n  clearToken(tokenKey = TOKEN_KEY) {\r\n    return auth.clear(tokenKey);\r\n  },\r\n\r\n  clearUserInfo(userInfo = USER_INFO) {\r\n    return auth.clear(userInfo);\r\n  },\r\n\r\n  /**\r\n   * Returns data from storage\r\n   * @param  {String} key Item to get from the storage\r\n   * @return {String|Object}     Data from the storage\r\n   */\r\n  get(key) {\r\n    if (localStorage && localStorage.getItem(key)) {\r\n      return parse(localStorage.getItem(key)) || null;\r\n    }\r\n\r\n    if (sessionStorage && sessionStorage.getItem(key)) {\r\n      return parse(sessionStorage.getItem(key)) || null;\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  getToken(tokenKey = TOKEN_KEY) {\r\n    return auth.get(tokenKey);\r\n  },\r\n\r\n  getUserInfo(userInfo = USER_INFO) {\r\n    return auth.get(userInfo);\r\n  },\r\n\r\n  /**\r\n   * Set data in storage\r\n   * @param {String|Object}  value    The data to store\r\n   * @param {String}  key\r\n   * @param {Boolean} isLocalStorage  Defines if we need to store in localStorage or sessionStorage\r\n   */\r\n  set(value, key, isLocalStorage) {\r\n    if (isEmpty(value)) {\r\n      return null;\r\n    }\r\n\r\n    if (isLocalStorage && localStorage) {\r\n      return localStorage.setItem(key, stringify(value));\r\n    }\r\n\r\n    if (sessionStorage) {\r\n      return sessionStorage.setItem(key, stringify(value));\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n  setToken(value = '', isLocalStorage = false, tokenKey = TOKEN_KEY) {\r\n    return auth.set(value, tokenKey, isLocalStorage);\r\n  },\r\n\r\n  setUserInfo(value = '', isLocalStorage = false, userInfo = USER_INFO) {\r\n    return auth.set(value, userInfo, isLocalStorage);\r\n  },\r\n};\r\n\r\nexport default auth;\r\n","import { createAction, createReducer } from 'redux-act';\r\n\r\nconst initialState = {\r\n  selected: {\r\n    name: null,\r\n    engines: [],\r\n  },\r\n  loading: false,\r\n  engines: [],\r\n  defaultValue: null,\r\n  fileId: null,\r\n  processSelected: null,\r\n};\r\n\r\nexport const fetchRequest = createAction('fetch request', loading => ({\r\n  loading,\r\n}));\r\nexport const fetchResponse = createAction('fetch response', loading => ({\r\n  loading,\r\n}));\r\nexport const getEngines = createAction('get engines', (engines, defaultValue) => {\r\n  return {\r\n    engines,\r\n    defaultValue,\r\n  };\r\n});\r\nexport const selectProcess = createAction('select process', selected => ({\r\n  selected,\r\n}));\r\nexport const setProcessSelected = createAction('set processSelected', processSelected => ({\r\n  processSelected,\r\n}));\r\nexport const changeFileID = createAction('change fileId', fileId => ({\r\n  fileId,\r\n}));\r\n\r\nexport default createReducer(\r\n  {\r\n    [setProcessSelected]: (state, { processSelected }) =>\r\n      Object.assign({}, state, { processSelected }),\r\n    [selectProcess]: (state, { selected }) => Object.assign({}, state, { selected }),\r\n    [getEngines]: (state, { engines, defaultValue }) =>\r\n      Object.assign({}, state, { engines, defaultValue }),\r\n    [changeFileID]: (state, { fileId }) => Object.assign({}, state, { fileId }),\r\n    [fetchRequest]: state => Object.assign({}, state, { loading: true }),\r\n    [fetchResponse]: state => Object.assign({}, state, { loading: false }),\r\n  },\r\n  initialState\r\n);\r\n","import { createAction, createReducer } from 'redux-act';\r\nconst array = require('lodash/array');\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n};\r\n\r\nexport const fetchAuth = createAction('fetch auth', ({ auth, accessToken }) => ({\r\n  auth,\r\n  accessToken,\r\n}));\r\nexport const addNotifications = createAction('add  notifications', notifications => ({\r\n  notifications,\r\n}));\r\nexport const changeNotifications = createAction('change  notifications', notifications => ({\r\n  notifications,\r\n}));\r\n\r\nexport default createReducer(\r\n  {\r\n    [changeNotifications]: (state, { notifications }) =>\r\n      Object.assign({}, state, { notifications }),\r\n    [addNotifications]: (state, { notifications }) => {\r\n      notifications = array.concat(state.notifications, notifications);\r\n\r\n      return {\r\n        ...state,\r\n        notifications,\r\n      };\r\n    },\r\n  },\r\n  initialState\r\n);\r\n","import React from 'react';\r\nimport { IntlProvider, addLocaleData } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport intlEN from 'react-intl/locale-data/en';\r\nimport intlES from 'react-intl/locale-data/es';\r\n\r\nimport messages_en from './../../translations/en.json';\r\nimport messages_es from './../../translations/es.json';\r\n\r\nimport { changeLang } from './../../reducers/auth';\r\n\r\naddLocaleData([...intlEN, ...intlES]);\r\nconst messages = {\r\n  en: messages_en,\r\n  es: messages_es,\r\n};\r\n\r\nconst IntlWrapper = props => {\r\n  const { children, lang, location, authChangeLang } = props;\r\n\r\n  let langParam = '';\r\n  langParam += location.pathname[1];\r\n  langParam += location.pathname[2];\r\n  if (langParam === 'en' || langParam === 'es') {\r\n    authChangeLang(langParam);\r\n  } else {\r\n    authChangeLang(lang);\r\n  }\r\n\r\n  return (\r\n    <IntlProvider key={lang} locale={lang} messages={messages[lang]}>\r\n      {children}\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.rootReducer.auth.lang,\r\n    location: state.router.location,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authChangeLang: bindActionCreators(changeLang, dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IntlWrapper);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// Utils\r\nimport auth from '../../utils/auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.getToken() !== null ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/signin',\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport loadable from 'react-loadable';\r\nimport LoadingComponent from 'components/AppComponents/Loading';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport config from './../config';\r\n\r\n// 3rd\r\nimport 'styles/antd.less';\r\nimport 'styles/bootstrap/bootstrap.scss';\r\n// custom\r\nimport 'styles/layout.scss';\r\nimport 'styles/theme.scss';\r\nimport 'styles/ui.scss';\r\nimport 'styles/vendors.scss';\r\n\r\nlet AsyncNotFound = loadable({\r\n  loader: () => import('components/NotFound'),\r\n  loading: LoadingComponent,\r\n});\r\nlet AsyncDashboard = loadable({\r\n  loader: () => import('containers/Dashboard'),\r\n  loading: LoadingComponent,\r\n});\r\nlet AsyncMain = loadable({\r\n  loader: () => import('containers/Main'),\r\n  loading: LoadingComponent,\r\n});\r\n\r\nconst AppTheme = styled.div`\r\n  .ant-btn-primary {\r\n    background-color: ${config[config.default].theme.bg_color} !important;\r\n    border-color: ${config[config.default].theme.border_color} !important;\r\n    color: #fff !important;\r\n  }\r\n`;\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const { location } = this.props;\r\n    const isRoot = location.pathname === '/' ? true : false;\r\n    if (isRoot) {\r\n      return <Redirect to={'/main'} />;\r\n    }\r\n\r\n    return (\r\n      <ThemeProvider theme={{ theme: 'pangeanic' }}>\r\n        <AppTheme id=\"app\">\r\n          <Switch>\r\n            <Route path=\"/main\" component={AsyncMain} />\r\n            <PrivateRoute path=\"/dashboard\" component={AsyncDashboard} />\r\n            <Route exact path=\"/404\" component={AsyncNotFound} />\r\n\r\n            <Route render={() => <Redirect to=\"/404\" />} />\r\n          </Switch>\r\n        </AppTheme>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { Provider } from 'react-redux';\r\nimport { Route } from 'react-router-dom';\r\nimport { LocaleProvider } from 'antd';\r\nimport enUS from 'antd/lib/locale-provider/en_US';\r\nimport IntlWrapper from 'components/IntlWrapper';\r\nimport ScrollToTop from 'components/AppComponents/ScrollToTop';\r\nimport App from './App';\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    const { store, history } = this.props;\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n          <LocaleProvider locale={enUS}>\r\n            <IntlWrapper>\r\n              <ScrollToTop>\r\n                <Route path=\"/\" component={App} />\r\n              </ScrollToTop>\r\n            </IntlWrapper>\r\n          </LocaleProvider>\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport process from './process';\r\nimport auth from './auth';\r\nimport notification from './notification';\r\n\r\nconst rootReducer = combineReducers({\r\n  process,\r\n  auth,\r\n  notification,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport Root from 'components/Root';\r\nimport * as serviceWorker from 'serviceWorker';\r\nimport configureStore from 'store/configureStore';\r\n\r\nexport const history = createBrowserHistory({\r\n  basename: process.env.PUBLIC_URL,\r\n});\r\n\r\nconst initialState = {};\r\nconst store = configureStore(initialState, history);\r\n\r\nrender(<Root store={store} history={history} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, compose, combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport rootReducer from './../reducers';\r\n\r\nexport default function configureStore(initialState, history) {\r\n  const composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n          shouldHotReload: false,\r\n        })\r\n      : compose;\r\n\r\n  const store = createStore(\r\n    combineReducers({\r\n      router: connectRouter(history),\r\n      rootReducer,\r\n      initialState,\r\n    }),\r\n\r\n    composeEnhancers()\r\n  );\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('./../reducers', () => {\r\n      const nextReducer = require('./../reducers').default;\r\n      store.replaceReducer(nextReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n","const config = {\r\n  default: 'pangeanic',\r\n  autheticity: {\r\n    title: 'Autheticity.io',\r\n    bg: '/images/bg/background.jpg',\r\n    logo: `${process.env.PUBLIC_URL}/images/logo-authenticityai_horizontal-color-01.png`,\r\n    logoMin: `${process.env.PUBLIC_URL}/images/logo-authenticityai_small-color-01.png`,\r\n    footer: 'Copyright © 2019 Authenticity.ai - All Rights Reserved.',\r\n    // hostApi: 'https://pgweb2.pangeamt.com',\r\n    hostApi: 'https://bdo001.authenticitytranslate.com',\r\n    // hostApi: 'http://localhost:3004',\r\n    hostClient: 'https://bdo001.authenticitytranslate.com',\r\n    // hostClient: 'http://authenticity.pangeamt.com',\r\n    theme: {\r\n      bg_color: '#0da44a',\r\n      border_color: '#6caa7a',\r\n      primary_color: '#0da44a',\r\n    },\r\n  },\r\n  pangeanic: {\r\n    title: 'PangeaMT',\r\n    bg: '/images/bg/background-pg.jpg',\r\n    logo: `${process.env.PUBLIC_URL}/images/logo-pangeamt.d4023af.png`,\r\n    logoMin: `${process.env.PUBLIC_URL}/images/logo-pangeamt.png`,\r\n    footer: 'PGWEB Powered by PangeaMT© 2019.',\r\n    // hostApi: 'http://pgweb2test.pangeamt.com',\r\n    // hostApi: 'http://13.56.248.252',\r\n    // hostApi: 'http://localhost:3004',\r\n    \r\n    hostApi: 'https://pgweb2.pangeamt.com',\r\n    hostClient: 'https://pgweb.pangeamt.com',\r\n\r\n    // hostApi: 'https://appusa.pangeamt.com',\r\n    // hostClient: 'https://appusa.pangeamt.com',\r\n    theme: {\r\n      // bg_color: '#d46b08',\r\n      bg_color: '#1890ff',\r\n      border_color: '#1890ff',\r\n      // border_color: '#fa8c16',\r\n      primary_color: '#d46b08',\r\n    },\r\n  },\r\n};\r\n\r\nexport default config;\r\n","import { createAction, createReducer } from 'redux-act';\r\n\r\nconst initialState = {\r\n  auth: false,\r\n  accessToken: null,\r\n  user: {},\r\n  lang: 'en',\r\n};\r\n\r\nexport const fetchAuth = createAction('fetch auth', ({ auth, accessToken }) => ({\r\n  auth,\r\n  accessToken,\r\n}));\r\nexport const fetchUser = createAction('fetch user', user => ({ user }));\r\n\r\nexport const changeLang = createAction('change language', lang => ({ lang }));\r\n\r\nexport default createReducer(\r\n  {\r\n    [fetchAuth]: (state, { auth, accessToken }) =>\r\n      Object.assign({}, state, {\r\n        auth,\r\n        accessToken,\r\n      }),\r\n    [fetchUser]: (state, { user }) => Object.assign({}, state, { user }),\r\n    [changeLang]: (state, { lang }) => Object.assign({}, state, { lang }),\r\n  },\r\n  initialState\r\n);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => <Spin size=\"large\" />;\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Loader from './Loader';\r\n\r\nfunction Loading(props) {\r\n  if (props.error) {\r\n    return <div className=\"loader-container\">Error! Please refresh the page</div>;\r\n  } else if (props.pastDelay) {\r\n    return (\r\n      <div className=\"loader-container\">\r\n        {' '}\r\n        <Loader />{' '}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null; // Avoiding Flash Of Loading Component (<200ms)\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n"],"sourceRoot":""}