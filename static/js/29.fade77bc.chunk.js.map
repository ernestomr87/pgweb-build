{"version":3,"sources":["styles/animation.js","components/Process/index.js","components/FreeUser/index.js","containers/Process/index.js"],"names":["fadeInKeyframes","keyframes","_templateObject","countries","require","default","Dragger","Upload","FormItem","Form","Item","Option","Select","FormItemWrapper","styled","Process_templateObject","Div","div","Process_templateObject2","props","error","Loading","_templateObject3","DivButtons","_templateObject4","IL","ImageLoader","_templateObject5","_ref","arguments","length","undefined","_ref$time","time","_ref$type","type","css","_templateObject2","fadeIn","jsUcfirst","string","charAt","toUpperCase","slice","Process","state","allowedFiles","showBilling","secret","process","fileList","uploading","visible","payVisible","processEnd","showError","source","target","viewNoty","loading","engines","defaultValue","defaultSourceValue","defaultTargetValue","selected","formValues","name","address","country","vattax","current","processSelected","loadingPay","applyTax","componentDidMount","_this","getEngines","regenerator_default","a","async","_context","prev","next","setState","awrap","getApiEngines","sent","console","log","data","value","initSelected","t0","stop","getProcess","self","_this$props","history","setProcessSelected","result","_context3","Object","assertThisInitialized","processAct","setInterval","aux","count","_context2","getProcessByListId","status","push","clearInterval","handleSubmit","e","preventDefault","messages","intl","_this$state","nameEng","getTargets","filter","item","key","form","validateFields","err","values","promises","map","functions","getBase64","originFileObj","Math","random","toString","Promise","all","then","files","split","id","engine","email","sendFile","message","success","catch","handleChange","array","forEach","element","toLowerCase","flag","i","languages","concat","sources","text","changeSource","changeTarget","getSources","_source","_this$state2","domain","renderForms","_this$state3","_this$props$form","getFieldDecorator","getFieldsError","dprops","beforeUpload","file","isLt2M","size","checkFile","uploadTwo","uploadOne","replace","onChange","info","multiple","showUploadList","options","d","react_default","createElement","c","Fragment","es_form","assign","labelCol","xs","span","sm","wrapperCol","onSubmit","row","justify","align","col","offset","badge","style","cursor","className","icon","drag","alert","validateStatus","label","hasFeedback","initialValue","disabled","rules","required","es_select","autofocus","notification","help","notificationHelp","input","display","justifyContent","marginBottom","es_button","marginTop","htmlType","getFieldValue","hasErrors","uploadingLoad","showListFile","hideListFile","setViewNoty","view","onRemove","_this$state4","uid","onRadioChange","pay","_context4","document","getElementById","submit","calculatePrice","price","toFixed","tax","parseFloat","_this2","this","continent","sum","rest","_this3","src","errorProcess","errorProcessSub","divider","onClick","tryAgain","spin","processing","React","Component","connect","rootReducer","dispatch","bindActionCreators","processActions","create","injectIntl","withRouter","FreeUser","selectProcess","changeFileID","src_components_Process","es","processAFile","subProcessAFile","components_FreeUser"],"mappings":"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","file":"static/js/29.fade77bc.chunk.js","sourcesContent":["import { keyframes, css } from 'styled-components';\r\n\r\nconst fadeInKeyframes = keyframes`\r\n  from {\r\n    filter: blur(5px);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    filter: blur(0);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const fadeIn = ({ time = '0.5s', type = 'ease' } = {}) =>\r\n  css`\r\n    animation: ${time} ${fadeInKeyframes} ${type};\r\n  `;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { bindActionCreators } from 'redux';\r\nimport ImageLoader from 'react-loading-image';\r\nimport styled from 'styled-components';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Upload,\r\n  Divider,\r\n  message,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Icon,\r\n  Badge,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport * as processActions from 'reducers/process';\r\nimport { sendFile, getApiEngines, getProcessByListId } from './../../services';\r\nimport functions from './../../utils/functions';\r\nimport { fadeIn } from 'styles/animation';\r\nimport './index.css';\r\n\r\nconst countries = require('./../../utils/countries').default;\r\nconst Dragger = Upload.Dragger;\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst FormItemWrapper = styled(FormItem)`\r\n  margin-bottom: 5px !important;\r\n  & {\r\n    .ant-form-item-label {\r\n      line-height: 20px;\r\n    }\r\n    .ant-form-explain {\r\n      color: #0f416a;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  ${props => (props.error ? `  border: 2px dashed #ea2020` : null)};\r\n`;\r\nconst Loading = styled.div`\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst DivButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IL = styled(ImageLoader)`\r\n  ${fadeIn()}\r\n  max-width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst jsUcfirst = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\nclass Process extends React.Component {\r\n  state = {\r\n    allowedFiles: '',\r\n    showBilling: '0',\r\n    secret: null,\r\n    process: [],\r\n    fileList: [],\r\n    uploading: false,\r\n    visible: false,\r\n    payVisible: false,\r\n    processEnd: false,\r\n    showError: false,\r\n    source: null,\r\n    target: null,\r\n    viewNoty: 'process',\r\n    loading: false,\r\n    engines: [],\r\n    defaultValue: [],\r\n    defaultSourceValue: null,\r\n    defaultTargetValue: null,\r\n    selected: {\r\n      engines: [],\r\n    },\r\n    formValues: {\r\n      name: '',\r\n      address: '',\r\n      country: 'ES',\r\n      vattax: '',\r\n    },\r\n    current: 0,\r\n    processSelected: null,\r\n    loadingPay: false,\r\n    applyTax: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getEngines();\r\n  };\r\n\r\n  getEngines = async () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const engines = await getApiEngines();\r\n      console.log('getApiEngines');\r\n      if (engines.data.process && engines.data.process.length) {\r\n        this.setState({\r\n          engines: engines.data.process,\r\n          allowedFiles: engines.data.allowedFiles,\r\n          defaultValue: jsUcfirst(engines.data.value),\r\n        });\r\n        this.initSelected(engines.data.value, engines.data.process);\r\n      }\r\n\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    } catch (err) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  getProcess = async () => {\r\n    const self = this;\r\n    const {\r\n      history,\r\n      processAct: { setProcessSelected },\r\n    } = this.props;\r\n    const result = setInterval(async () => {\r\n      const aux = await getProcessByListId({\r\n        secret: self.state.secret,\r\n      });\r\n      let count = 0;\r\n      if (aux.data.length && aux.data[0].status === 'quote_ready') {\r\n        setProcessSelected(aux.data[0]);\r\n        self.setState({\r\n          process: aux.data,\r\n          payVisible: true,\r\n        });\r\n        history.push('/main/process/pay');\r\n        clearInterval(result);\r\n      }\r\n      if (count > 60) {\r\n        history.push('/main');\r\n        clearInterval(result);\r\n      }\r\n      count++;\r\n    }, 1000);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      intl: { messages },\r\n    } = this.props;\r\n    const { target, fileList, selected } = this.state;\r\n    const targets = this.getTargets();\r\n\r\n    // eslint-disable-next-line array-callback-return\r\n    const nameEng = targets.filter(item => {\r\n      if (item && item.key === target) {\r\n        return item;\r\n      }\r\n    })[0];\r\n\r\n    if (nameEng) {\r\n      this.setState({\r\n        target,\r\n        showError: false,\r\n        viewNoty: 'process',\r\n        current: 0,\r\n        formValues: {\r\n          name: '',\r\n          address: '',\r\n          country: 'ES',\r\n          vattax: '',\r\n        },\r\n        applyTax: false,\r\n      });\r\n    }\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (fileList.length) {\r\n          const promises = fileList.map(item => {\r\n            return functions.getBase64(item.originFileObj);\r\n          });\r\n\r\n          const secret = Math.random()\r\n            .toString(36)\r\n            .slice(-8);\r\n          this.setState({ secret });\r\n\r\n          Promise.all(promises)\r\n            .then(files => {\r\n              let aux = values.target.split('-');\r\n              let form = {\r\n                secret: secret,\r\n                process: {\r\n                  id: aux[0],\r\n                  name: selected.name,\r\n                },\r\n                engine: nameEng,\r\n                source: {\r\n                  id: aux[0],\r\n                  name: selected.name,\r\n                },\r\n                files: files,\r\n                email: values.email,\r\n              };\r\n              this.setState({\r\n                uploading: true,\r\n              });\r\n              sendFile(form)\r\n                .then(() => {\r\n                  message.success(messages.default.success);\r\n                  this.setState({\r\n                    uploading: false,\r\n                    viewNoty: 'success',\r\n                    fileList: [],\r\n                  });\r\n                  this.getProcess();\r\n                })\r\n                .catch(error => {\r\n                  message.error(error.message);\r\n                  this.setState({\r\n                    uploading: false,\r\n                    viewNoty: 'error',\r\n                  });\r\n                });\r\n            })\r\n            .catch(err => {\r\n              message.error(err.message);\r\n            });\r\n        } else {\r\n          this.setState({\r\n            showError: true,\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChange = value => {\r\n    let selected = null;\r\n    let array = [];\r\n\r\n    this.state.engines.forEach(element => {\r\n      if (element.name === value.toLowerCase()) {\r\n        this.setState({\r\n          selected: element,\r\n        });\r\n        selected = element;\r\n      }\r\n    });\r\n\r\n    if (selected) {\r\n      if (selected.engines && selected.engines.length) {\r\n        selected.engines.forEach(element => {\r\n          let flag = false;\r\n          for (let i = 0; i < array.length; i++) {\r\n            if (array[i].key === element.source) {\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!flag) {\r\n            let key = element.source;\r\n            array.push({\r\n              key,\r\n              id: element.id,\r\n              name: functions.languages[key],\r\n              target: element.target,\r\n              source: element.source,\r\n            });\r\n          }\r\n        });\r\n        if (array.length) {\r\n          this.setState({\r\n            defaultSourceValue: array[0].name,\r\n            source: array[0].source,\r\n            target: `${array[0].id}-${array[0].target}`,\r\n            defaultTargetValue: this.getTargets(selected.engines, array[0].source)[0].name,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  initSelected = (value, sources) => {\r\n    let selected = null;\r\n    let array = [];\r\n    const self = this;\r\n    for (let i = 0; i < sources.length; i++) {\r\n      if (sources[i].name === value) {\r\n        self.setState({\r\n          selected: sources[i],\r\n        });\r\n        selected = sources[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (selected) {\r\n      if (selected.engines && selected.engines.length) {\r\n        selected.engines.forEach(element => {\r\n          let flag = false;\r\n          for (let i = 0; i < array.length; i++) {\r\n            if (array[i].key === element.source) {\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!flag) {\r\n            let key = element.source;\r\n            array.push({\r\n              key,\r\n              id: element.id,\r\n              name: functions.languages[key],\r\n              target: element.target,\r\n              source: element.source,\r\n            });\r\n          }\r\n        });\r\n        if (array.length) {\r\n          this.setState({\r\n            defaultSourceValue: array[0].name,\r\n            source: array[0].source,\r\n            target: `${array[0].id}-${array[0].target}`,\r\n            defaultTargetValue: this.getTargets(selected.engines, array[0].source)[0].text,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  changeSource = source => {\r\n    this.setState({\r\n      source,\r\n    });\r\n  };\r\n\r\n  changeTarget = target => {\r\n    this.setState({\r\n      target,\r\n    });\r\n  };\r\n\r\n  getSources = () => {\r\n    const { selected } = this.state;\r\n    let array = [];\r\n    if (selected.engines && selected.engines.length) {\r\n      selected.engines.forEach(element => {\r\n        let flag = false;\r\n        for (let i = 0; i < array.length; i++) {\r\n          if (array[i].key === element.source) {\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          let key = element.source;\r\n          array.push({ key, name: functions.languages[key] });\r\n        }\r\n      });\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  getTargets = (engines = null, _source = null) => {\r\n    const { selected, source } = this.state;\r\n    if (!engines) {\r\n      engines = selected.engines;\r\n    }\r\n    if (!_source) {\r\n      _source = source;\r\n    }\r\n\r\n    let array = [];\r\n    engines.forEach(element => {\r\n      let flag = false;\r\n      for (let i = 0; i < array.length; i++) {\r\n        if (array[i].key === element.target) {\r\n          flag = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_source) {\r\n        if (!flag && element.source === _source) {\r\n          if (element.domain) {\r\n            element['key'] = `${element.id}-${element.target}`;\r\n            element['text'] = `${functions.languages[element.target]} - ${element.name} - ${\r\n              element.domain\r\n            }`;\r\n          } else {\r\n            element['key'] = `${element.id}-${element.target}`;\r\n            element['text'] = `${functions.languages[element.target]} - ${element.name}`;\r\n          }\r\n          array.push(element);\r\n        }\r\n      }\r\n    });\r\n    return array;\r\n  };\r\n\r\n  renderForms = () => {\r\n    const {\r\n      intl: { messages },\r\n    } = this.props;\r\n    const {\r\n      allowedFiles,\r\n      engines,\r\n      loading,\r\n      fileList,\r\n      showError,\r\n      defaultValue,\r\n      source,\r\n      processEnd,\r\n      defaultSourceValue,\r\n      defaultTargetValue,\r\n      selected,\r\n      uploading,\r\n      target,\r\n    } = this.state;\r\n\r\n    const {\r\n      form: { getFieldDecorator, getFieldsError },\r\n    } = this.props;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n      },\r\n    };\r\n\r\n    const dprops = {\r\n      beforeUpload: file => {\r\n        const isLt2M = file.size / 1024 / 1024 < 500;\r\n        if (!functions.checkFile(file, allowedFiles)) {\r\n          message.error(messages.process.error.uploadOne.replace('allowedFiles', allowedFiles));\r\n        } else if (!isLt2M) {\r\n          message.error(messages.process.error.uploadTwo);\r\n        }\r\n        return false;\r\n      },\r\n      onChange: info => {\r\n        let aux = [];\r\n        info.fileList.map(item => {\r\n          if (functions.checkFile(item, allowedFiles)) {\r\n            aux.push(item);\r\n          }\r\n          return aux;\r\n        });\r\n        this.setState({\r\n          fileList: aux,\r\n        });\r\n      },\r\n      multiple: false,\r\n      fileList,\r\n      showUploadList: true,\r\n    };\r\n    let options = [];\r\n    if (engines.length) {\r\n      options = engines.map(d => (\r\n        <Option key={d.id} value={d.name.replace(/^\\w/, c => c.toUpperCase())}>\r\n          {d.name.replace(/^\\w/, c => c.toUpperCase())}\r\n        </Option>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n          <Row type=\"flex\" justify=\"center\" align=\"middle\">\r\n            <Col xs={24}>\r\n              <FormItemWrapper {...tailFormItemLayout}>\r\n                <Div error={showError && !fileList.length}>\r\n                  <Badge style={{ cursor: 'pointer' }} count={fileList.length}>\r\n                    <Dragger {...dprops}>\r\n                      <p className=\"ant-upload-drag-icon\">\r\n                        <Icon type=\"inbox\" />\r\n                      </p>\r\n                      <p className=\"ant-upload-text\">{messages.process.drag}</p>\r\n                    </Dragger>\r\n                  </Badge>\r\n\r\n                  {showError && !fileList.length ? message.error(messages.process.alert) : null}\r\n                </Div>\r\n              </FormItemWrapper>\r\n            </Col>\r\n            <Col xs={24}>\r\n              <FormItemWrapper\r\n                validateStatus={loading ? 'validating' : ''}\r\n                label={messages.process.process}\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator('process', {\r\n                  initialValue: defaultValue,\r\n                  disabled: source === null || processEnd,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.process.required,\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Select autofocus=\"true\" onChange={this.handleChange}>\r\n                    {options}\r\n                  </Select>\r\n                )}\r\n              </FormItemWrapper>\r\n            </Col>\r\n\r\n            <Col xs={24}>\r\n              <FormItemWrapper label={messages.process.source} hasFeedback>\r\n                {getFieldDecorator('source', {\r\n                  initialValue: defaultSourceValue,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.source.required,\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Select disabled={!this.getSources().length} onChange={this.changeSource}>\r\n                    {this.getSources().map(element => {\r\n                      return <Option key={element.key}>{element.name}</Option>;\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </FormItemWrapper>\r\n              <FormItemWrapper label={messages.process.target} hasFeedback>\r\n                {getFieldDecorator('target', {\r\n                  initialValue: defaultTargetValue,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.target.required,\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Select onChange={this.changeTarget} disabled={source === null || processEnd}>\r\n                    {this.getTargets().map(element => {\r\n                      return (\r\n                        <Option key={element.key} value={element.key}>\r\n                          {element.text}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </FormItemWrapper>\r\n              <FormItemWrapper\r\n                label={messages.process.notification}\r\n                hasFeedback\r\n                help={messages.process.notificationHelp}\r\n              >\r\n                {getFieldDecorator('email', {\r\n                  disabled: processEnd,\r\n                  rules: [\r\n                    {\r\n                      type: 'email',\r\n                      message: messages.process.rules.email.type,\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: messages.process.rules.email.required,\r\n                    },\r\n                  ],\r\n                })(<Input disabled={!selected.engines.length} />)}\r\n              </FormItemWrapper>\r\n            </Col>\r\n            <Col xs={24}>\r\n              <FormItemWrapper\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  marginBottom: 0,\r\n                }}\r\n              >\r\n                {!processEnd ? (\r\n                  <Row justify=\"center\" type=\"flex\">\r\n                    <Button\r\n                      style={{ marginTop: 10 }}\r\n                      icon=\"upload\"\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      size=\"large\"\r\n                      loading={uploading}\r\n                      disabled={\r\n                        !this.getSources().length ||\r\n                        !target ||\r\n                        !source ||\r\n                        !this.props.form.getFieldValue('email') ||\r\n                        !this.props.form.getFieldValue('email').length ||\r\n                        functions.hasErrors(getFieldsError())\r\n                      }\r\n                    >\r\n                      {uploading ? messages.process.uploading : messages.process.uploadingLoad}\r\n                    </Button>\r\n                  </Row>\r\n                ) : null}\r\n              </FormItemWrapper>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  showListFile = () => {\r\n    if (this.state.fileList.length) {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  hideListFile = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  setViewNoty = view => {\r\n    this.setState({\r\n      viewNoty: view,\r\n    });\r\n  };\r\n\r\n  onRemove = file => {\r\n    const { processEnd, fileList } = this.state;\r\n    if (!processEnd) {\r\n      let aux = [];\r\n      fileList.map(item => {\r\n        if (item.uid !== file.uid) {\r\n          aux.push(item);\r\n        }\r\n        return aux;\r\n      });\r\n      if (!aux.length) this.hideListFile();\r\n      this.setState({\r\n        fileList: aux,\r\n      });\r\n    }\r\n  };\r\n\r\n  onRadioChange = e => {\r\n    this.setState({\r\n      showBilling: e.target.value,\r\n    });\r\n  };\r\n\r\n  pay = async id => {\r\n    this.setState({\r\n      loadingPay: id,\r\n    });\r\n    document.getElementById(id).submit();\r\n  };\r\n\r\n  next() {\r\n    if (this.state.current === 1) {\r\n      const { form } = this.props;\r\n      form.validateFields((err, values) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n        // form.resetFields();\r\n        const current = this.state.current + 1;\r\n        if (countries[values.country].continent === 'EU') {\r\n          values.continent = countries[values.country].continent;\r\n          this.setState({ current, formValues: values, applyTax: true });\r\n        } else {\r\n          values.continent = countries[values.country].continent;\r\n          this.setState({ current, formValues: values, applyTax: true });\r\n        }\r\n      });\r\n    } else {\r\n      let sum = 1;\r\n      if (this.state.current === 0 && this.state.showBilling === '2') {\r\n        sum = 2;\r\n      }\r\n      const current = this.state.current + sum;\r\n      this.setState({ current });\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    let rest = 1;\r\n    if (this.state.current === 2 && this.state.showBilling === '2') {\r\n      rest = 2;\r\n    }\r\n    const current = this.state.current - rest;\r\n    this.setState({ current });\r\n  }\r\n\r\n  calculatePrice = price => {\r\n    const { applyTax } = this.state;\r\n\r\n    let aux = price.toFixed(2);\r\n    if (aux === '0.00') aux = '0.01';\r\n\r\n    if (applyTax) {\r\n      const tax = ((parseFloat(aux) * 21) / 100).toFixed(2);\r\n      aux = parseFloat(aux) + parseFloat(tax);\r\n    }\r\n    return aux;\r\n  };\r\n\r\n  handleChange = value => {\r\n    let aux = this.state.formValues;\r\n    aux.country = value;\r\n    this.setState({\r\n      formValues: aux,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      intl: { messages },\r\n    } = this.props;\r\n    const { viewNoty } = this.state;\r\n    if (viewNoty === 'process') {\r\n      return this.renderForms();\r\n    }\r\n    if (viewNoty === 'error') {\r\n      return (\r\n        <div style={{ justifyContent: 'center' }} className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-8 col-8 p-4\">\r\n            <IL\r\n              src={`${process.env.PUBLIC_URL}/images/undraw_bug_fixing_oc7a.svg`}\r\n              loading={() => <div>{messages.process.loading}...</div>}\r\n              error={() => <div>Error</div>}\r\n            />\r\n            <h2>{messages.process.errorProcess}</h2>\r\n            <p>{messages.process.errorProcessSub}</p>\r\n            <Divider />\r\n            <DivButtons>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setViewNoty('process');\r\n                }}\r\n                type=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                {messages.process.tryAgain}\r\n              </Button>\r\n            </DivButtons>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (viewNoty === 'success') {\r\n      return (\r\n        <div style={{ justifyContent: 'center' }} className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-8 col-8 p-4\">\r\n            <IL\r\n              src={`${process.env.PUBLIC_URL}/images/undraw_confirmation_2uy0.svg`}\r\n              loading={() => (\r\n                <div>\r\n                  <Loading></Loading>\r\n                </div>\r\n              )}\r\n              error={() => <div>Error</div>}\r\n            />\r\n            <h2>\r\n              <Spin size=\"large\" /> &nbsp; {messages.process.processing}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    processAct: bindActionCreators(processActions, dispatch),\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    process: state.rootReducer.process,\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Form.create()(injectIntl(withRouter(Process))));\r\n","import React from 'react';\r\nimport Process from './../Process';\r\n\r\nconst FreeUser = props => {\r\n  const { selectProcess, process, changeFileID } = props;\r\n\r\n  const _selectProcess = value => {\r\n    selectProcess(value);\r\n  };\r\n\r\n  return <Process changeFileID={changeFileID} process={process} selectProcess={_selectProcess} />;\r\n};\r\n\r\nexport default FreeUser;\r\n","import React from 'react';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport './index.css';\r\n\r\nimport FreeUser from '../../components/FreeUser';\r\n\r\nconst ProcessComponent = props => {\r\n  const {\r\n    intl: { messages },\r\n  } = props;\r\n  return (\r\n    <QueueAnim type=\"bottom\" className=\"ui-animate\">\r\n      <div key=\"1\" className=\"row justify-content-md-center\">\r\n        <div className=\"form-card__body col-md-6 p-4\">\r\n          <article className=\"article\">\r\n            <div className=\"box box-default\">\r\n              <div className=\"box-body p-4\">\r\n                <section className=\"form-v1-container\">\r\n                  <h2> {messages.process.processAFile}</h2>\r\n                  <p className=\"lead col-lg-10 mx-lg-auto\">{messages.process.subProcessAFile}</p>\r\n                  <p>(docx | xlsx | pptx | pdf | odt | odp)</p>\r\n                  <FreeUser />\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </QueueAnim>\r\n  );\r\n};\r\nexport default injectIntl(ProcessComponent);\r\n"],"sourceRoot":""}